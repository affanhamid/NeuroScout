{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/lib/db/database.ts"],"sourcesContent":["import mongoose from \"mongoose\";\nmongoose.set(\"debug\", true);\nimport dotenv from \"dotenv\";\ndotenv.config({ path: \".env.local\" });\n\nexport const connect = async () => {\n  await mongoose.connect(process.env.DOCUMENT_URI as string, {\n    autoIndex: true,\n    readPreference: \"primary\"\n  });\n};\n\nexport const disconnect = async () => {\n  await mongoose.disconnect();\n};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;AADA,yGAAA,CAAA,UAAQ,CAAC,GAAG,CAAC,SAAS;;AAEtB,uIAAA,CAAA,UAAM,CAAC,MAAM,CAAC;IAAE,MAAM;AAAa;AAE5B,MAAM,UAAU;IACrB,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,YAAY,EAAY;QACzD,WAAW;QACX,gBAAgB;IAClB;AACF;AAEO,MAAM,aAAa;IACxB,MAAM,yGAAA,CAAA,UAAQ,CAAC,UAAU;AAC3B"}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/errors/api.ts"],"sourcesContent":["export type ErrorDetails = {\n  field?: string; // Field or parameter causing the error\n  value?: string | number | boolean | object | null; // Value that caused the error\n  info?: string; // Additional human-readable information\n};\n\nexport class ApiError extends Error {\n  public code: number; // HTTP status code\n  public details?: ErrorDetails; // Optional error details\n\n  constructor(message: string, code: number, details?: ErrorDetails) {\n    super(message + JSON.stringify(details));\n    this.name = \"ApiError\";\n    this.code = code;\n    this.details = details;\n  }\n}\n\nexport class ValidationError extends ApiError {\n  constructor(message: string, details?: ErrorDetails) {\n    super(message, 400, details); // 400: Bad Request\n    this.name = \"ValidationError\";\n  }\n}\n\nexport class NotFoundError extends ApiError {\n  constructor(message: string, details?: ErrorDetails) {\n    super(message, 404, details); // 404: Not Found\n    this.name = \"NotFoundError\";\n  }\n}\n\nexport class AuthenticationError extends ApiError {\n  constructor(message: string, details?: ErrorDetails) {\n    super(message, 401, details); // 401: Unauthorized\n    this.name = \"AuthenticationError\";\n  }\n}\n\nexport class AuthorizationError extends ApiError {\n  constructor(message: string, details?: ErrorDetails) {\n    super(message, 403, details); // 403: Forbidden\n    this.name = \"AuthorizationError\";\n  }\n}\n\nexport class ConflictError extends ApiError {\n  constructor(message: string, details?: ErrorDetails) {\n    super(message, 409, details); // 409: Conflict\n    this.name = \"ConflictError\";\n  }\n}\n\nexport class InternalServerError extends ApiError {\n  constructor(message: string, details?: ErrorDetails) {\n    super(message, 500, details); // 500: Internal Server Error\n    this.name = \"InternalServerError\";\n  }\n}\n\nexport class BadGatewayError extends ApiError {\n  constructor(message: string, details?: ErrorDetails) {\n    super(message, 502, details); // 502: Bad Gateway\n    this.name = \"BadGatewayError\";\n  }\n}\n\nexport const handleApiError = (error: unknown): never => {\n  if (error instanceof ApiError) {\n    // Re-throw if it's already an ApiError\n    throw error;\n  }\n\n  if (error instanceof Error) {\n    // Map generic errors to specific types\n    switch (error.name) {\n      case \"ValidationError\":\n        throw new ValidationError(\"Validation error occurred\", {\n          info: error.message\n        });\n      case \"NotFoundError\":\n        throw new NotFoundError(\"Resource not found\", {\n          info: error.message\n        });\n      case \"AuthenticationError\":\n        throw new AuthenticationError(\"Authentication failed\", {\n          info: error.message\n        });\n      case \"AuthorizationError\":\n        throw new AuthorizationError(\"Access forbidden\", {\n          info: error.message\n        });\n      case \"ConflictError\":\n        throw new ConflictError(\"Conflict error\", {\n          info: error.message\n        });\n      case \"InternalServerError\":\n        throw new InternalServerError(\"Internal server error\", {\n          info: error.message\n        });\n      case \"BadGatewayError\":\n        throw new BadGatewayError(\"Bad gateway error\", {\n          info: error.message\n        });\n      default:\n        // Fallback for unhandled error names\n        throw new InternalServerError(\"An unexpected error occurred\", {\n          info: error.message\n        });\n    }\n  }\n\n  // Handle unknown or non-Error objects\n  throw new InternalServerError(\"An unknown error occurred\", {\n    info: String(error)\n  });\n};\n"],"names":[],"mappings":";;;;;;;;;;;AAMO,MAAM,iBAAiB;IACrB,KAAa;IACb,QAAuB;IAE9B,YAAY,OAAe,EAAE,IAAY,EAAE,OAAsB,CAAE;QACjE,KAAK,CAAC,UAAU,KAAK,SAAS,CAAC;QAC/B,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,OAAO,GAAG;IACjB;AACF;AAEO,MAAM,wBAAwB;IACnC,YAAY,OAAe,EAAE,OAAsB,CAAE;QACnD,KAAK,CAAC,SAAS,KAAK,UAAU,mBAAmB;QACjD,IAAI,CAAC,IAAI,GAAG;IACd;AACF;AAEO,MAAM,sBAAsB;IACjC,YAAY,OAAe,EAAE,OAAsB,CAAE;QACnD,KAAK,CAAC,SAAS,KAAK,UAAU,iBAAiB;QAC/C,IAAI,CAAC,IAAI,GAAG;IACd;AACF;AAEO,MAAM,4BAA4B;IACvC,YAAY,OAAe,EAAE,OAAsB,CAAE;QACnD,KAAK,CAAC,SAAS,KAAK,UAAU,oBAAoB;QAClD,IAAI,CAAC,IAAI,GAAG;IACd;AACF;AAEO,MAAM,2BAA2B;IACtC,YAAY,OAAe,EAAE,OAAsB,CAAE;QACnD,KAAK,CAAC,SAAS,KAAK,UAAU,iBAAiB;QAC/C,IAAI,CAAC,IAAI,GAAG;IACd;AACF;AAEO,MAAM,sBAAsB;IACjC,YAAY,OAAe,EAAE,OAAsB,CAAE;QACnD,KAAK,CAAC,SAAS,KAAK,UAAU,gBAAgB;QAC9C,IAAI,CAAC,IAAI,GAAG;IACd;AACF;AAEO,MAAM,4BAA4B;IACvC,YAAY,OAAe,EAAE,OAAsB,CAAE;QACnD,KAAK,CAAC,SAAS,KAAK,UAAU,6BAA6B;QAC3D,IAAI,CAAC,IAAI,GAAG;IACd;AACF;AAEO,MAAM,wBAAwB;IACnC,YAAY,OAAe,EAAE,OAAsB,CAAE;QACnD,KAAK,CAAC,SAAS,KAAK,UAAU,mBAAmB;QACjD,IAAI,CAAC,IAAI,GAAG;IACd;AACF;AAEO,MAAM,iBAAiB,CAAC;IAC7B,IAAI,iBAAiB,UAAU;QAC7B,uCAAuC;QACvC,MAAM;IACR;IAEA,IAAI,iBAAiB,OAAO;QAC1B,uCAAuC;QACvC,OAAQ,MAAM,IAAI;YAChB,KAAK;gBACH,MAAM,IAAI,gBAAgB,6BAA6B;oBACrD,MAAM,MAAM,OAAO;gBACrB;YACF,KAAK;gBACH,MAAM,IAAI,cAAc,sBAAsB;oBAC5C,MAAM,MAAM,OAAO;gBACrB;YACF,KAAK;gBACH,MAAM,IAAI,oBAAoB,yBAAyB;oBACrD,MAAM,MAAM,OAAO;gBACrB;YACF,KAAK;gBACH,MAAM,IAAI,mBAAmB,oBAAoB;oBAC/C,MAAM,MAAM,OAAO;gBACrB;YACF,KAAK;gBACH,MAAM,IAAI,cAAc,kBAAkB;oBACxC,MAAM,MAAM,OAAO;gBACrB;YACF,KAAK;gBACH,MAAM,IAAI,oBAAoB,yBAAyB;oBACrD,MAAM,MAAM,OAAO;gBACrB;YACF,KAAK;gBACH,MAAM,IAAI,gBAAgB,qBAAqB;oBAC7C,MAAM,MAAM,OAAO;gBACrB;YACF;gBACE,qCAAqC;gBACrC,MAAM,IAAI,oBAAoB,gCAAgC;oBAC5D,MAAM,MAAM,OAAO;gBACrB;QACJ;IACF;IAEA,sCAAsC;IACtC,MAAM,IAAI,oBAAoB,6BAA6B;QACzD,MAAM,OAAO;IACf;AACF"}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/errors/database.ts"],"sourcesContent":["import { ErrorDetails } from \"./api\";\n\nexport class DatabaseError extends Error {\n  public code: number; // HTTP status code\n  public details?: ErrorDetails; // Optional error details\n\n  constructor(message: string, code: number = 500, details?: ErrorDetails) {\n    super(message); // Pass only the message to the Error constructor\n    this.name = \"DatabaseError\"; // Set the name of the error\n    this.code = code; // Assign the HTTP status code\n    this.details = details; // Assign the details separately\n  }\n}\n\nexport class DatabaseConnectionError extends DatabaseError {\n  constructor(message: string = \"Failed to connect to the database\") {\n    super(message, 503); // 503: Service Unavailable\n    this.name = \"DatabaseConnectionError\";\n  }\n}\n\nexport class DatabaseQueryError extends DatabaseError {\n  constructor(message: string, details?: ErrorDetails) {\n    super(message, 400, details); // 400: Bad Request\n    this.name = \"DatabaseQueryError\";\n  }\n}\n\nexport class QuerySyntaxError extends DatabaseQueryError {\n  constructor(details?: ErrorDetails) {\n    super(\"Syntax error in the database query\", details);\n    this.name = \"QuerySyntaxError\";\n  }\n}\n\nexport class InvalidFieldError extends DatabaseQueryError {\n  constructor(details?: ErrorDetails) {\n    super(\"Invalid field or table in query\", details);\n    this.name = \"InvalidFieldError\";\n  }\n}\n\nexport class TypeMismatchError extends DatabaseQueryError {\n  constructor(details?: ErrorDetails) {\n    super(\"Type mismatch in query\", details);\n    this.name = \"TypeMismatchError\";\n  }\n}\n\nexport class PermissionDeniedError extends DatabaseQueryError {\n  constructor(details?: ErrorDetails) {\n    super(\"Permission denied for database query\", details);\n    this.name = \"PermissionDeniedError\";\n  }\n}\n\nexport class DatabaseTransactionError extends DatabaseError {\n  constructor(\n    message: string = \"Database transaction failed\",\n    details?: ErrorDetails\n  ) {\n    super(message, 500, details); // 500: Internal Server Error\n    this.name = \"DatabaseTransactionError\";\n  }\n}\n\nexport class DatabaseTimeoutError extends DatabaseError {\n  constructor(\n    message: string = \"Database operation timed out\",\n    details?: ErrorDetails\n  ) {\n    super(message, 504, details); // 504: Gateway Timeout\n    this.name = \"DatabaseTimeoutError\";\n  }\n}\n\nexport class DatabaseConstraintError extends DatabaseError {\n  constructor(\n    message: string = \"Constraint violation in database operation\",\n    details?: ErrorDetails\n  ) {\n    super(message, 409, details); // 409: Conflict\n    this.name = \"DatabaseConstraintError\";\n  }\n}\n\nexport class DatabaseResourceError extends DatabaseError {\n  constructor(\n    message: string = \"Database resource limit exceeded\",\n    details?: ErrorDetails\n  ) {\n    super(message, 507, details); // 507: Insufficient Storage\n    this.name = \"DatabaseResourceError\";\n  }\n}\n\nexport const handleDBError = (error: unknown): never => {\n  if (error instanceof Error) {\n    // Handle custom DatabaseError types\n    if (error instanceof DatabaseError) {\n      throw error; // Re-throw the specific database error\n    }\n\n    // Handle ValidationError\n    if (error.name === \"ValidationError\") {\n      throw new DatabaseQueryError(\"Validation failed\", {\n        info: error.message\n      });\n    }\n\n    // Handle CastError (e.g., invalid ID format)\n    if (error.name === \"CastError\") {\n      throw new InvalidFieldError({\n        info: error.message\n      });\n    }\n\n    // Handle duplicate key errors\n    if (\"code\" in error && (error as { code: number }).code === 11000) {\n      throw new DatabaseConstraintError(\"Duplicate key error\", {\n        info: error.message\n      });\n    }\n\n    // Handle connection or timeout errors\n    if (\n      error.message.includes(\"timed out\") ||\n      error.message.includes(\"ECONNREFUSED\")\n    ) {\n      throw new DatabaseTimeoutError(\"Database connection timed out\", {\n        info: error.message\n      });\n    }\n\n    if (error.message.includes(\"connect\")) {\n      throw new DatabaseConnectionError(\"Failed to connect to the database\");\n    }\n\n    // Handle any other generic database-related errors\n    throw new DatabaseQueryError(\"Database query failed\", {\n      info: error.message\n    });\n  }\n\n  // Handle non-Error unknown errors\n  throw new DatabaseError(\"An unknown error occurred\");\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 356, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 365, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 444, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/lib/db/crud.ts"],"sourcesContent":["import { Model, Document, Types } from \"mongoose\";\nimport * as e from \"@/errors\";\nimport { handleDBError } from \"@/errors\";\n\nexport const addOne = async <TObject>(\n  model: Model<TObject>,\n  item: TObject\n): Promise<Document & TObject> => {\n  const newItem = await model.create(item);\n  return newItem;\n};\n\nexport const getOne = async <TObject>(\n  model: Model<TObject>,\n  id: string\n): Promise<TObject & Document> => {\n  const item = await model.findById(id);\n  if (!item) {\n    throw new e.NotFoundError(`Item with ID ${id} not found`);\n  }\n  return item;\n};\n\nexport const getAll = async <TObject>(\n  model: Model<TObject>\n): Promise<(Document & TObject)[]> => {\n  const items = await model.find();\n  return items;\n};\n\nexport const updateOne = async <TObject>(\n  model: Model<TObject>,\n  id: string,\n  updates: Partial<TObject & Document>, // Updates are Partial<TModel>\n  isNew: boolean\n): Promise<Document & TObject> => {\n  const updatedItem = await model\n    .findByIdAndUpdate(id, updates, {\n      new: isNew,\n      runValidators: true\n    })\n    .exec();\n  if (!updatedItem) {\n    throw new e.NotFoundError(`Item with ID ${id} not found for update`);\n  }\n  return updatedItem;\n};\n\nexport const deleteOne = async <TObject>(\n  model: Model<TObject>,\n  id: string // Input type is id\n): Promise<Document & TObject> => {\n  const updatedItem = await model\n    .findByIdAndUpdate(\n      id,\n      { deletedAt: new Date() }, // Set the deletedAt field to the current timestamp\n      { new: true, runValidators: true } // Return the updated document\n    )\n    .exec();\n  if (!updatedItem) {\n    throw new e.NotFoundError(`Item with ID ${id} not found for soft deletion`);\n  }\n  return updatedItem;\n};\n\nexport const validateReferences = async <\n  TObjects extends Record<string, string | number>\n>(\n  references:\n    | Map<Model<TObjects[keyof TObjects]>, keyof TObjects[keyof TObjects]>\n    | object\n): Promise<boolean> => {\n  if (!(references instanceof Map) || references.size === 0) {\n    return false;\n  }\n  try {\n    for (const [model, key] of references.entries()) {\n      if (!Types.ObjectId.isValid(key as string)) {\n        throw new e.ValidationError(\n          `Invalid object id: model: ${model}, key: ${String(key)}`\n        );\n      }\n      const exists = await model.exists({ _id: key });\n      if (!exists) {\n        throw new e.ValidationError(\n          `Reference with object id ${String(key)} does not exist in ${Model}`\n        );\n      }\n    }\n    return true;\n  } catch (err) {\n    throw new e.DatabaseError(`Error Validating References: ${err}`);\n  }\n};\n\nconst withErrorHandling = <\n  TObject,\n  TArgs extends\n    | [TObject] // For addOne\n    | [id: string] // For getOne and deleteOne\n    | [id: string, updates: Partial<TObject & Document>, isNew: boolean] // For updateOne\n    | [], // For getAll\n  TResult\n>(\n  handler: (\n    model: Model<TObject & Document>,\n    ...args: TArgs\n  ) => Promise<TResult>\n) => {\n  return async (\n    model: Model<TObject & Document>,\n    ...args: TArgs\n  ): Promise<TResult> => {\n    try {\n      return handler(model, ...args);\n    } catch (error) {\n      handleDBError(error);\n      throw error;\n    }\n  };\n};\n\nexport const handlers = {\n  getAll: withErrorHandling(getAll),\n  getOne: withErrorHandling(getOne),\n  addOne: withErrorHandling(addOne),\n  updateOne: withErrorHandling(updateOne),\n  deleteOne: withErrorHandling(deleteOne)\n};\n"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AAAA;AACA;;;;AAEO,MAAM,SAAS,OACpB,OACA;IAEA,MAAM,UAAU,MAAM,MAAM,MAAM,CAAC;IACnC,OAAO;AACT;AAEO,MAAM,SAAS,OACpB,OACA;IAEA,MAAM,OAAO,MAAM,MAAM,QAAQ,CAAC;IAClC,IAAI,CAAC,MAAM;QACT,MAAM,IAAI,yHAAE,aAAa,CAAC,CAAC,aAAa,EAAE,GAAG,UAAU,CAAC;IAC1D;IACA,OAAO;AACT;AAEO,MAAM,SAAS,OACpB;IAEA,MAAM,QAAQ,MAAM,MAAM,IAAI;IAC9B,OAAO;AACT;AAEO,MAAM,YAAY,OACvB,OACA,IACA,SACA;IAEA,MAAM,cAAc,MAAM,MACvB,iBAAiB,CAAC,IAAI,SAAS;QAC9B,KAAK;QACL,eAAe;IACjB,GACC,IAAI;IACP,IAAI,CAAC,aAAa;QAChB,MAAM,IAAI,yHAAE,aAAa,CAAC,CAAC,aAAa,EAAE,GAAG,qBAAqB,CAAC;IACrE;IACA,OAAO;AACT;AAEO,MAAM,YAAY,OACvB,OACA;IAEA,MAAM,cAAc,MAAM,MACvB,iBAAiB,CAChB,IACA;QAAE,WAAW,IAAI;IAAO,GACxB;QAAE,KAAK;QAAM,eAAe;IAAK,EAAE,8BAA8B;MAElE,IAAI;IACP,IAAI,CAAC,aAAa;QAChB,MAAM,IAAI,yHAAE,aAAa,CAAC,CAAC,aAAa,EAAE,GAAG,4BAA4B,CAAC;IAC5E;IACA,OAAO;AACT;AAEO,MAAM,qBAAqB,OAGhC;IAIA,IAAI,CAAC,CAAC,sBAAsB,GAAG,KAAK,WAAW,IAAI,KAAK,GAAG;QACzD,OAAO;IACT;IACA,IAAI;QACF,KAAK,MAAM,CAAC,OAAO,IAAI,IAAI,WAAW,OAAO,GAAI;YAC/C,IAAI,CAAC,yGAAA,CAAA,QAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAgB;gBAC1C,MAAM,IAAI,yHAAE,eAAe,CACzB,CAAC,0BAA0B,EAAE,MAAM,OAAO,EAAE,OAAO,MAAM;YAE7D;YACA,MAAM,SAAS,MAAM,MAAM,MAAM,CAAC;gBAAE,KAAK;YAAI;YAC7C,IAAI,CAAC,QAAQ;gBACX,MAAM,IAAI,yHAAE,eAAe,CACzB,CAAC,yBAAyB,EAAE,OAAO,KAAK,mBAAmB,EAAE,yGAAA,CAAA,QAAK,EAAE;YAExE;QACF;QACA,OAAO;IACT,EAAE,OAAO,KAAK;QACZ,MAAM,IAAI,yHAAE,aAAa,CAAC,CAAC,6BAA6B,EAAE,KAAK;IACjE;AACF;AAEA,MAAM,oBAAoB,CASxB;IAKA,OAAO,OACL,OACA,GAAG;QAEH,IAAI;YACF,OAAO,QAAQ,UAAU;QAC3B,EAAE,OAAO,OAAO;YACd,CAAA,GAAA,2HAAA,CAAA,gBAAa,AAAD,EAAE;YACd,MAAM;QACR;IACF;AACF;AAEO,MAAM,WAAW;IACtB,QAAQ,kBAAkB;IAC1B,QAAQ,kBAAkB;IAC1B,QAAQ,kBAAkB;IAC1B,WAAW,kBAAkB;IAC7B,WAAW,kBAAkB;AAC/B"}},
    {"offset": {"line": 536, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 542, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/lib/db/schema.ts"],"sourcesContent":["import { Schema, InferSchemaType, Types } from \"mongoose\";\n\nexport const OrganizationSchema = new Schema(\n  {\n    name: {\n      type: String,\n      required: true,\n      match: /^[a-zA-Z0-9 ]{1,}$/ // Validation for alphanumeric and spaces\n    },\n    deletedAt: { type: Date }\n  },\n  { timestamps: true }\n);\n\nexport const PlayerSchema = new Schema(\n  {\n    firstName: {\n      type: String,\n      required: true,\n      trim: true,\n      minlength: 1,\n      maxlength: 50 // Optional: Limit name length for validation\n    },\n    lastName: {\n      type: String,\n      required: true,\n      trim: true,\n      minlength: 1,\n      maxlength: 50 // Optional: Limit name length for validation\n    },\n    age: {\n      type: Number,\n      required: true,\n      validate: {\n        validator: (val: number) => val > 10 && val < 100,\n        message: \"Age must be between 10 and 99\"\n      }\n    },\n    position: {\n      type: String,\n      required: true,\n      min: 0 // Position must be non-negative\n    },\n    organizationId: {\n      type: String,\n      required: true,\n      match: /^[a-zA-Z0-9-]{1,}$/ // Validation for alphanumeric with hyphens\n    },\n    deletedAt: { type: Date }\n  },\n  { timestamps: true }\n);\n\nexport const GameSchema = new Schema(\n  {\n    name: {\n      type: String,\n      required: true,\n      match: /^[a-zA-Z0-9 ]{1,}$/ // Validation for alphanumeric and spaces\n    },\n    description: {\n      type: String,\n      required: true,\n      match: /^[a-zA-Z0-9 .,!?]{1,}$/ // Validation for sentences and punctuation\n    },\n    image: {\n      type: String,\n      required: true,\n      match: /^(http|https):\\/\\/[^ \"]+$/ // Validation for valid URLs\n    },\n    instructions: {\n      type: [\n        {\n          step: { type: Number, required: true },\n          image: {\n            type: String,\n            required: true,\n            match: /^(http|https):\\/\\/[^ \"]+$/\n          }\n        }\n      ]\n    },\n    parameters: {\n      type: [\n        {\n          id: { type: String, required: true },\n          data: { type: Schema.Types.Mixed, required: true }\n        }\n      ],\n      required: true\n    },\n    deletedAt: { type: Date }\n  },\n  { timestamps: true }\n);\n\nexport const GameObservationSchema = new Schema(\n  {\n    playerId: {\n      type: String,\n      required: true,\n      match: /^[a-zA-Z0-9-]{1,}$/\n    },\n    gameId: {\n      type: String,\n      required: true,\n      match: /^[a-zA-Z0-9-]{1,}$/\n    },\n    data: { type: Schema.Types.Mixed, required: true }, // Flexible object type\n    deletedAt: { type: Date }\n  },\n  { timestamps: true }\n);\n\nexport const UserSchema = new Schema(\n  {\n    email: {\n      type: String,\n      required: true,\n      match: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/ // Email validation\n    },\n    password: {\n      type: String,\n      required: true,\n      minlength: 8 // Minimum length for passwords\n    },\n    role: {\n      type: String,\n      required: true,\n      enum: [\"admin\", \"user\", \"manager\"] // Predefined roles\n    },\n    organizationId: {\n      type: String,\n      required: true,\n      match: /^[a-zA-Z0-9-]{1,}$/\n    },\n    deletedAt: { type: Date }\n  },\n  { timestamps: true }\n);\n\nexport const ResultSchema = new Schema(\n  {\n    gameId: {\n      type: String,\n      required: true,\n      match: /^[a-zA-Z0-9-]{1,}$/\n    },\n    playerId: {\n      type: String,\n      required: true,\n      match: /^[a-zA-Z0-9-]{1,}$/\n    },\n    metrics: { type: Schema.Types.Mixed, required: true },\n    resultDate: { type: Date, default: Date.now, required: true },\n    deletedAt: { type: Date }\n  },\n  { timestamps: true }\n);\n\nexport const MetricsTemplateSchema = new Schema(\n  {\n    gameId: {\n      type: String,\n      required: true,\n      match: /^[a-zA-Z0-9-]{1,}$/\n    },\n    metrics: {\n      type: [\n        {\n          name: {\n            type: String,\n            required: true,\n            match: /^[a-zA-Z0-9 ]{1,}$/ // Validation for alphanumeric and spaces\n          },\n          description: {\n            type: String,\n            required: true,\n            match: /^[a-zA-Z0-9 .,!?]{1,}$/ // Validation for sentences and punctuation\n          },\n          type: {\n            type: String,\n            required: true,\n            enum: [\"number\", \"string\"] // Allowed types\n          }\n        }\n      ],\n      required: true\n    },\n    deletedAt: { type: Date }\n  },\n  { timestamps: true }\n);\n\n// Types\nexport type OrganizationType = InferSchemaType<typeof OrganizationSchema> & {};\nexport type PlayerType = InferSchemaType<typeof PlayerSchema>;\nexport type GameType = InferSchemaType<typeof GameSchema>;\nexport type GameObservationType = InferSchemaType<typeof GameObservationSchema>;\nexport type UserType = InferSchemaType<typeof UserSchema>;\nexport type ResultType = InferSchemaType<typeof ResultSchema>;\nexport type MetricsTemplateType = InferSchemaType<typeof MetricsTemplateSchema>;\n\nexport type OrganizationTypeWithId = OrganizationType & { _id: Types.ObjectId };\nexport type PlayerTypeWithId = PlayerType & { _id: Types.ObjectId };\nexport type GameTypeWithId = GameType & { _id: Types.ObjectId };\nexport type GameObservationTypeWithId = GameObservationType & {\n  _id: Types.ObjectId;\n};\nexport type UserTypeWithId = UserType & { _id: Types.ObjectId };\nexport type ResultTypeWithId = ResultType & { _id: Types.ObjectId };\nexport type MetricsTemplateTypeWithId = MetricsTemplateType & {\n  _id: Types.ObjectId;\n};\n\n// Just the fields\nexport type OrganizationFields = Omit<\n  OrganizationType,\n  \"createdAt\" | \"deletedAt\" | \"updatedAt\"\n>;\nexport type PlayerFields = Omit<\n  PlayerType,\n  \"createdAt\" | \"deletedAt\" | \"updatedAt\"\n>;\nexport type GameFields = Omit<\n  GameType,\n  \"createdAt\" | \"deletedAt\" | \"updatedAt\"\n>;\nexport type GameObservationFields = Omit<\n  GameObservationType,\n  \"createdAt\" | \"deletedAt\" | \"updatedAt\"\n>;\nexport type UserFields = Omit<\n  UserType,\n  \"createdAt\" | \"deletedAt\" | \"updatedAt\"\n>;\nexport type ResultFields = Omit<\n  ResultType,\n  \"createdAt\" | \"deletedAt\" | \"updatedAt\"\n>;\nexport type MetricsTemplateFields = Omit<\n  MetricsTemplateType,\n  \"createdAt\" | \"deletedAt\" | \"updatedAt\"\n>;\n"],"names":[],"mappings":";;;;;;;;;AAAA;;AAEO,MAAM,qBAAqB,IAAI,yGAAA,CAAA,SAAM,CAC1C;IACE,MAAM;QACJ,MAAM;QACN,UAAU;QACV,OAAO,qBAAqB,yCAAyC;IACvE;IACA,WAAW;QAAE,MAAM;IAAK;AAC1B,GACA;IAAE,YAAY;AAAK;AAGd,MAAM,eAAe,IAAI,yGAAA,CAAA,SAAM,CACpC;IACE,WAAW;QACT,MAAM;QACN,UAAU;QACV,MAAM;QACN,WAAW;QACX,WAAW,GAAG,6CAA6C;IAC7D;IACA,UAAU;QACR,MAAM;QACN,UAAU;QACV,MAAM;QACN,WAAW;QACX,WAAW,GAAG,6CAA6C;IAC7D;IACA,KAAK;QACH,MAAM;QACN,UAAU;QACV,UAAU;YACR,WAAW,CAAC,MAAgB,MAAM,MAAM,MAAM;YAC9C,SAAS;QACX;IACF;IACA,UAAU;QACR,MAAM;QACN,UAAU;QACV,KAAK,EAAE,gCAAgC;IACzC;IACA,gBAAgB;QACd,MAAM;QACN,UAAU;QACV,OAAO,qBAAqB,2CAA2C;IACzE;IACA,WAAW;QAAE,MAAM;IAAK;AAC1B,GACA;IAAE,YAAY;AAAK;AAGd,MAAM,aAAa,IAAI,yGAAA,CAAA,SAAM,CAClC;IACE,MAAM;QACJ,MAAM;QACN,UAAU;QACV,OAAO,qBAAqB,yCAAyC;IACvE;IACA,aAAa;QACX,MAAM;QACN,UAAU;QACV,OAAO,yBAAyB,2CAA2C;IAC7E;IACA,OAAO;QACL,MAAM;QACN,UAAU;QACV,OAAO,4BAA4B,4BAA4B;IACjE;IACA,cAAc;QACZ,MAAM;YACJ;gBACE,MAAM;oBAAE,MAAM;oBAAQ,UAAU;gBAAK;gBACrC,OAAO;oBACL,MAAM;oBACN,UAAU;oBACV,OAAO;gBACT;YACF;SACD;IACH;IACA,YAAY;QACV,MAAM;YACJ;gBACE,IAAI;oBAAE,MAAM;oBAAQ,UAAU;gBAAK;gBACnC,MAAM;oBAAE,MAAM,yGAAA,CAAA,SAAM,CAAC,KAAK,CAAC,KAAK;oBAAE,UAAU;gBAAK;YACnD;SACD;QACD,UAAU;IACZ;IACA,WAAW;QAAE,MAAM;IAAK;AAC1B,GACA;IAAE,YAAY;AAAK;AAGd,MAAM,wBAAwB,IAAI,yGAAA,CAAA,SAAM,CAC7C;IACE,UAAU;QACR,MAAM;QACN,UAAU;QACV,OAAO;IACT;IACA,QAAQ;QACN,MAAM;QACN,UAAU;QACV,OAAO;IACT;IACA,MAAM;QAAE,MAAM,yGAAA,CAAA,SAAM,CAAC,KAAK,CAAC,KAAK;QAAE,UAAU;IAAK;IACjD,WAAW;QAAE,MAAM;IAAK;AAC1B,GACA;IAAE,YAAY;AAAK;AAGd,MAAM,aAAa,IAAI,yGAAA,CAAA,SAAM,CAClC;IACE,OAAO;QACL,MAAM;QACN,UAAU;QACV,OAAO,6BAA6B,mBAAmB;IACzD;IACA,UAAU;QACR,MAAM;QACN,UAAU;QACV,WAAW,EAAE,+BAA+B;IAC9C;IACA,MAAM;QACJ,MAAM;QACN,UAAU;QACV,MAAM;YAAC;YAAS;YAAQ;SAAU,CAAC,mBAAmB;IACxD;IACA,gBAAgB;QACd,MAAM;QACN,UAAU;QACV,OAAO;IACT;IACA,WAAW;QAAE,MAAM;IAAK;AAC1B,GACA;IAAE,YAAY;AAAK;AAGd,MAAM,eAAe,IAAI,yGAAA,CAAA,SAAM,CACpC;IACE,QAAQ;QACN,MAAM;QACN,UAAU;QACV,OAAO;IACT;IACA,UAAU;QACR,MAAM;QACN,UAAU;QACV,OAAO;IACT;IACA,SAAS;QAAE,MAAM,yGAAA,CAAA,SAAM,CAAC,KAAK,CAAC,KAAK;QAAE,UAAU;IAAK;IACpD,YAAY;QAAE,MAAM;QAAM,SAAS,KAAK,GAAG;QAAE,UAAU;IAAK;IAC5D,WAAW;QAAE,MAAM;IAAK;AAC1B,GACA;IAAE,YAAY;AAAK;AAGd,MAAM,wBAAwB,IAAI,yGAAA,CAAA,SAAM,CAC7C;IACE,QAAQ;QACN,MAAM;QACN,UAAU;QACV,OAAO;IACT;IACA,SAAS;QACP,MAAM;YACJ;gBACE,MAAM;oBACJ,MAAM;oBACN,UAAU;oBACV,OAAO,qBAAqB,yCAAyC;gBACvE;gBACA,aAAa;oBACX,MAAM;oBACN,UAAU;oBACV,OAAO,yBAAyB,2CAA2C;gBAC7E;gBACA,MAAM;oBACJ,MAAM;oBACN,UAAU;oBACV,MAAM;wBAAC;wBAAU;qBAAS,CAAC,gBAAgB;gBAC7C;YACF;SACD;QACD,UAAU;IACZ;IACA,WAAW;QAAE,MAAM;IAAK;AAC1B,GACA;IAAE,YAAY;AAAK"}},
    {"offset": {"line": 771, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 777, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/lib/db/models.ts"],"sourcesContent":["import {\n  OrganizationSchema,\n  PlayerSchema,\n  GameSchema,\n  GameObservationSchema,\n  UserSchema,\n  ResultSchema,\n  MetricsTemplateSchema\n} from \"./schema\";\nimport { model, models } from \"mongoose\";\n\n// Models\nexport const OrganizationModel =\n  models.Organization || model(\"Organization\", OrganizationSchema);\nexport const PlayerModel = models.Player || model(\"Player\", PlayerSchema);\nexport const GameModel = models.Game || model(\"Game\", GameSchema);\nexport const GameObservationModel =\n  models[\"Game Observation\"] ||\n  model(\"Game Observation\", GameObservationSchema);\nexport const UserModel = models.User || model(\"User\", UserSchema);\nexport const ResultModel = models.Result || model(\"Result\", ResultSchema);\nexport const MetricsTemplateModel =\n  models.MetricTemplate || model(\"MetricTemplate\", MetricsTemplateSchema);\n"],"names":[],"mappings":";;;;;;;;;AAAA;AASA;;;AAGO,MAAM,oBACX,yGAAA,CAAA,SAAM,CAAC,YAAY,IAAI,CAAA,GAAA,yGAAA,CAAA,QAAK,AAAD,EAAE,gBAAgB,4HAAA,CAAA,qBAAkB;AAC1D,MAAM,cAAc,yGAAA,CAAA,SAAM,CAAC,MAAM,IAAI,CAAA,GAAA,yGAAA,CAAA,QAAK,AAAD,EAAE,UAAU,4HAAA,CAAA,eAAY;AACjE,MAAM,YAAY,yGAAA,CAAA,SAAM,CAAC,IAAI,IAAI,CAAA,GAAA,yGAAA,CAAA,QAAK,AAAD,EAAE,QAAQ,4HAAA,CAAA,aAAU;AACzD,MAAM,uBACX,yGAAA,CAAA,SAAM,CAAC,mBAAmB,IAC1B,CAAA,GAAA,yGAAA,CAAA,QAAK,AAAD,EAAE,oBAAoB,4HAAA,CAAA,wBAAqB;AAC1C,MAAM,YAAY,yGAAA,CAAA,SAAM,CAAC,IAAI,IAAI,CAAA,GAAA,yGAAA,CAAA,QAAK,AAAD,EAAE,QAAQ,4HAAA,CAAA,aAAU;AACzD,MAAM,cAAc,yGAAA,CAAA,SAAM,CAAC,MAAM,IAAI,CAAA,GAAA,yGAAA,CAAA,QAAK,AAAD,EAAE,UAAU,4HAAA,CAAA,eAAY;AACjE,MAAM,uBACX,yGAAA,CAAA,SAAM,CAAC,cAAc,IAAI,CAAA,GAAA,yGAAA,CAAA,QAAK,AAAD,EAAE,kBAAkB,4HAAA,CAAA,wBAAqB"}},
    {"offset": {"line": 797, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 803, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 808, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 826, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/types/api.ts"],"sourcesContent":["import type {\n  OrganizationFields,\n  PlayerFields,\n  GameFields,\n  GameTypeWithId,\n  GameObservationTypeWithId,\n  UserTypeWithId,\n  ResultTypeWithId,\n  MetricsTemplateTypeWithId,\n  OrganizationTypeWithId,\n  PlayerTypeWithId,\n  GameObservationFields,\n  ResultFields,\n  MetricsTemplateFields,\n  UserFields\n} from \"../lib/db/schema\";\n\nexport class ApiResponse<T> {\n  status: number;\n  data?: T;\n  error?: string;\n\n  constructor(status: number, data?: T, error?: string) {\n    this.status = status;\n    this.data = data;\n    this.error = error;\n  }\n\n  static success<T>(data: T, status = 200): ApiResponse<T> {\n    return new ApiResponse<T>(status, data);\n  }\n\n  static error<T>(error: string, status = 400): ApiResponse<T> {\n    return new ApiResponse<T>(status, undefined, error);\n  }\n\n  toJson(): Response {\n    const responseBody = this.error\n      ? { success: false, error: this.error }\n      : { success: true, data: this.data };\n\n    return new Response(JSON.stringify(responseBody), { status: this.status });\n  }\n}\n\nexport type ApiRequest<T> = {\n  json: () => Promise<T>;\n};\n\n// Organizations\nexport type CreateOrganizationRequest = ApiRequest<OrganizationFields>;\nexport type UpdateOrganizationRequest = ApiRequest<\n  Partial<CreateOrganizationRequest>\n>;\n\nexport type GetOrganizationResponse = ApiResponse<OrganizationTypeWithId>;\nexport type GetOrganizationsResponse = ApiResponse<OrganizationTypeWithId[]>;\n\n// Player\nexport type CreatePlayerRequest = ApiRequest<PlayerFields>;\nexport type UpdatePlayerRequest = ApiRequest<Partial<CreatePlayerRequest>>;\n\nexport type GetPlayerResponse = ApiResponse<PlayerTypeWithId>;\nexport type GetPlayersResponse = ApiResponse<PlayerTypeWithId[]>;\n\n// Game\nexport type CreateGameRequest = ApiRequest<GameFields>;\nexport type UpdateGameRequest = Partial<CreateGameRequest>;\n\nexport type GetGameResponse = ApiResponse<GameTypeWithId>;\nexport type GetGamesResponse = ApiResponse<GameTypeWithId[]>;\n\n// Game Observation\nexport type CreateGameObservationRequest = ApiRequest<GameObservationFields>;\nexport type UpdateGameObservationRequest =\n  Partial<CreateGameObservationRequest>;\n\nexport type GetGameObservationResponse = ApiResponse<GameObservationTypeWithId>;\nexport type GetGameObservationsResponse =\n  ApiResponse<GameObservationTypeWithId>;\n\n// User\nexport type CreateUserRequest = ApiRequest<UserFields>;\nexport type UpdateUserRequest = Partial<CreateUserRequest>;\n\nexport type GetUserResponse = ApiResponse<UserTypeWithId>;\nexport type GetUsersResponse = ApiResponse<UserTypeWithId[]>;\n\n// Result\nexport type CreateResultRequest = ApiRequest<ResultFields>;\nexport type UpdateResultRequest = Partial<CreateResultRequest>;\n\nexport type GetResultResponse = ApiResponse<ResultTypeWithId>;\nexport type GetResultsResponse = ApiResponse<ResultTypeWithId[]>;\n\n// Metrics Template\nexport type CreateMetricsTemplateRequest = ApiRequest<MetricsTemplateFields>;\nexport type UpdateMetricsTemplateRequest =\n  Partial<CreateMetricsTemplateRequest>;\n\nexport type GetMetricsTemplateResponse = ApiResponse<MetricsTemplateTypeWithId>;\nexport type GetMetricsTemplatesResponse = ApiResponse<\n  MetricsTemplateTypeWithId[]\n>;\n"],"names":[],"mappings":";;;AAiBO,MAAM;IACX,OAAe;IACf,KAAS;IACT,MAAe;IAEf,YAAY,MAAc,EAAE,IAAQ,EAAE,KAAc,CAAE;QACpD,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,KAAK,GAAG;IACf;IAEA,OAAO,QAAW,IAAO,EAAE,SAAS,GAAG,EAAkB;QACvD,OAAO,IAAI,YAAe,QAAQ;IACpC;IAEA,OAAO,MAAS,KAAa,EAAE,SAAS,GAAG,EAAkB;QAC3D,OAAO,IAAI,YAAe,QAAQ,WAAW;IAC/C;IAEA,SAAmB;QACjB,MAAM,eAAe,IAAI,CAAC,KAAK,GAC3B;YAAE,SAAS;YAAO,OAAO,IAAI,CAAC,KAAK;QAAC,IACpC;YAAE,SAAS;YAAM,MAAM,IAAI,CAAC,IAAI;QAAC;QAErC,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC,eAAe;YAAE,QAAQ,IAAI,CAAC,MAAM;QAAC;IAC1E;AACF"}},
    {"offset": {"line": 857, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 863, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/lib/api/api.ts"],"sourcesContent":["import { Model, Document } from \"mongoose\";\nimport { ApiResponse } from \"@/types/api\";\nimport {\n  addOne,\n  deleteOne,\n  getAll,\n  getOne,\n  updateOne,\n  validateReferences\n} from \"../db\";\nimport { handleApiError } from \"@/errors\";\nimport { connect } from \"../db\";\n\nexport class BaseAPI<TObject> {\n  constructor(public model: Model<TObject>) {\n    this.connectToDb();\n  }\n\n  async connectToDb() {\n    await connect();\n  }\n\n  async getOne(id: string): Promise<Response> {\n    try {\n      const modelObject = await getOne(this.model, id);\n      if (!modelObject) {\n        return ApiResponse.error(\"Item not found\", 404).toJson();\n      }\n      return ApiResponse.success(modelObject).toJson();\n    } catch (error) {\n      return handleApiError(error);\n    }\n  }\n\n  async getAll(): Promise<Response> {\n    try {\n      const objects = await getAll(this.model);\n      return ApiResponse.success(objects).toJson();\n    } catch (error) {\n      return handleApiError(error);\n    }\n  }\n\n  async addOne<TObjects extends Record<string, string | number>>(\n    values: TObject,\n    references?: Map<\n      Model<TObjects[keyof TObjects]>,\n      keyof TObjects[keyof TObjects]\n    >\n  ): Promise<Response> {\n    try {\n      const validReferences = references\n        ? await validateReferences(references!)\n        : true;\n      if (validReferences) {\n        const result = await addOne<TObject>(this.model, values);\n        return ApiResponse.success(result, 201).toJson();\n      } else {\n        return ApiResponse.error(\"invalid Reference\", 403).toJson();\n      }\n    } catch (error) {\n      return handleApiError(error);\n    }\n  }\n\n  async updateOne<TObjects extends Record<string, string | number>>(\n    id: string,\n    updateData: Partial<Document & TObject>,\n    references?: Map<\n      Model<TObjects[keyof TObjects]>,\n      keyof TObjects[keyof TObjects]\n    >\n  ): Promise<Response> {\n    try {\n      const validReferences = references\n        ? await validateReferences(references!)\n        : true;\n      if (validReferences) {\n        const updatedModel = await updateOne(this.model, id, updateData, true);\n        if (!updatedModel) {\n          return ApiResponse.error(\"Item not found\", 404).toJson();\n        }\n        return ApiResponse.success(updatedModel).toJson();\n      } else {\n        return ApiResponse.error(\"invalid Reference\", 403).toJson();\n      }\n    } catch (error) {\n      return handleApiError(error);\n    }\n  }\n\n  async deleteOne(id: string): Promise<Response> {\n    try {\n      await deleteOne(this.model, id);\n      return ApiResponse.success(204).toJson();\n    } catch (error) {\n      return handleApiError(error);\n    }\n  }\n}\n"],"names":[],"mappings":";;;AACA;AACA;AAQA;AACA;AATA;AAQA;;;;;AAGO,MAAM;;IACX,YAAY,AAAO,KAAqB,CAAE;aAAvB,QAAA;QACjB,IAAI,CAAC,WAAW;IAClB;IAEA,MAAM,cAAc;QAClB,MAAM,CAAA,GAAA,8HAAA,CAAA,UAAO,AAAD;IACd;IAEA,MAAM,OAAO,EAAU,EAAqB;QAC1C,IAAI;YACF,MAAM,cAAc,MAAM,CAAA,GAAA,0HAAA,CAAA,SAAM,AAAD,EAAE,IAAI,CAAC,KAAK,EAAE;YAC7C,IAAI,CAAC,aAAa;gBAChB,OAAO,qHAAA,CAAA,cAAW,CAAC,KAAK,CAAC,kBAAkB,KAAK,MAAM;YACxD;YACA,OAAO,qHAAA,CAAA,cAAW,CAAC,OAAO,CAAC,aAAa,MAAM;QAChD,EAAE,OAAO,OAAO;YACd,OAAO,CAAA,GAAA,sHAAA,CAAA,iBAAc,AAAD,EAAE;QACxB;IACF;IAEA,MAAM,SAA4B;QAChC,IAAI;YACF,MAAM,UAAU,MAAM,CAAA,GAAA,0HAAA,CAAA,SAAM,AAAD,EAAE,IAAI,CAAC,KAAK;YACvC,OAAO,qHAAA,CAAA,cAAW,CAAC,OAAO,CAAC,SAAS,MAAM;QAC5C,EAAE,OAAO,OAAO;YACd,OAAO,CAAA,GAAA,sHAAA,CAAA,iBAAc,AAAD,EAAE;QACxB;IACF;IAEA,MAAM,OACJ,MAAe,EACf,UAGC,EACkB;QACnB,IAAI;YACF,MAAM,kBAAkB,aACpB,MAAM,CAAA,GAAA,0HAAA,CAAA,qBAAkB,AAAD,EAAE,cACzB;YACJ,IAAI,iBAAiB;gBACnB,MAAM,SAAS,MAAM,CAAA,GAAA,0HAAA,CAAA,SAAM,AAAD,EAAW,IAAI,CAAC,KAAK,EAAE;gBACjD,OAAO,qHAAA,CAAA,cAAW,CAAC,OAAO,CAAC,QAAQ,KAAK,MAAM;YAChD,OAAO;gBACL,OAAO,qHAAA,CAAA,cAAW,CAAC,KAAK,CAAC,qBAAqB,KAAK,MAAM;YAC3D;QACF,EAAE,OAAO,OAAO;YACd,OAAO,CAAA,GAAA,sHAAA,CAAA,iBAAc,AAAD,EAAE;QACxB;IACF;IAEA,MAAM,UACJ,EAAU,EACV,UAAuC,EACvC,UAGC,EACkB;QACnB,IAAI;YACF,MAAM,kBAAkB,aACpB,MAAM,CAAA,GAAA,0HAAA,CAAA,qBAAkB,AAAD,EAAE,cACzB;YACJ,IAAI,iBAAiB;gBACnB,MAAM,eAAe,MAAM,CAAA,GAAA,0HAAA,CAAA,YAAS,AAAD,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,YAAY;gBACjE,IAAI,CAAC,cAAc;oBACjB,OAAO,qHAAA,CAAA,cAAW,CAAC,KAAK,CAAC,kBAAkB,KAAK,MAAM;gBACxD;gBACA,OAAO,qHAAA,CAAA,cAAW,CAAC,OAAO,CAAC,cAAc,MAAM;YACjD,OAAO;gBACL,OAAO,qHAAA,CAAA,cAAW,CAAC,KAAK,CAAC,qBAAqB,KAAK,MAAM;YAC3D;QACF,EAAE,OAAO,OAAO;YACd,OAAO,CAAA,GAAA,sHAAA,CAAA,iBAAc,AAAD,EAAE;QACxB;IACF;IAEA,MAAM,UAAU,EAAU,EAAqB;QAC7C,IAAI;YACF,MAAM,CAAA,GAAA,0HAAA,CAAA,YAAS,AAAD,EAAE,IAAI,CAAC,KAAK,EAAE;YAC5B,OAAO,qHAAA,CAAA,cAAW,CAAC,OAAO,CAAC,KAAK,MAAM;QACxC,EAAE,OAAO,OAAO;YACd,OAAO,CAAA,GAAA,sHAAA,CAAA,iBAAc,AAAD,EAAE;QACxB;IACF;AACF"}},
    {"offset": {"line": 942, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 948, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/app/api/games/%5Bid%5D/route.ts"],"sourcesContent":["import { GameModel, GameType } from \"@/lib/db\";\nimport { BaseAPI } from \"@/lib/api/api\";\nimport { ApiRequest } from \"@/types\";\n\nconst api = new BaseAPI(GameModel);\n\nexport const GET = async (\n  request: Request,\n  {\n    params\n  }: {\n    params: { id: string };\n  }\n): Promise<Response> => {\n  return api.getOne(params.id);\n};\n\nexport const PUT = async (\n  req: ApiRequest<Partial<GameType>>,\n  { params }: { params: { id: string } }\n): Promise<Response> => {\n  const updateData = await req.json();\n  return api.updateOne(params.id, updateData);\n};\n\nexport const DELETE = (\n  request: Request,\n  {\n    params\n  }: {\n    params: { id: string };\n  }\n): Promise<Response> => {\n  return api.deleteOne(params.id);\n};\n"],"names":[],"mappings":";;;;;AAAA;AACA;AADA;;;AAIA,MAAM,MAAM,IAAI,0HAAA,CAAA,UAAO,CAAC,4HAAA,CAAA,YAAS;AAE1B,MAAM,MAAM,OACjB,SACA,EACE,MAAM,EAGP;IAED,OAAO,IAAI,MAAM,CAAC,OAAO,EAAE;AAC7B;AAEO,MAAM,MAAM,OACjB,KACA,EAAE,MAAM,EAA8B;IAEtC,MAAM,aAAa,MAAM,IAAI,IAAI;IACjC,OAAO,IAAI,SAAS,CAAC,OAAO,EAAE,EAAE;AAClC;AAEO,MAAM,SAAS,CACpB,SACA,EACE,MAAM,EAGP;IAED,OAAO,IAAI,SAAS,CAAC,OAAO,EAAE;AAChC"}},
    {"offset": {"line": 969, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}