{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/components/game-components/modals/Carousel.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport Image from \"next/image\";\nimport { XMarkIcon } from \"@heroicons/react/24/outline\";\n\ntype Instruction = {\n  step: number;\n  image: string;\n};\n\nexport type Instructions = Instruction[];\n\nconst Carousel = ({ instructions }: { instructions: Instructions }) => {\n  const [step, setStep] = useState(0);\n  const [showInstructions, setShowInstructions] = useState(false);\n\n  const handleClick = (direction: 1 | -1) => {\n    const newStep = step + direction;\n    if (newStep >= 0) {\n      setStep(newStep >= instructions.length ? 0 : newStep);\n    }\n  };\n\n  return (\n    <div>\n      {/* Read Instructions Button */}\n      <button\n        className=\"bg-slate-600 hover:bg-slate-700 game-button\"\n        onClick={() => setShowInstructions(true)}\n        aria-label=\"Read Instructions\"\n      >\n        Instructions\n      </button>\n\n      {/* Instructions Modal */}\n      {showInstructions && (\n        <div className=\"absolute inset-0 bg-game-background flex items-center justify-center\">\n          <div className=\"relative w-[80%] max-w-4xl p-6 rounded-lg \">\n            {/* Close Button */}\n            <button\n              onClick={() => setShowInstructions(false)}\n              className=\"absolute top-4 right-4 cursor-pointer z-30 flex items-center justify-center bg-gray-700 hover:bg-gray-600 p-2 rounded-full\"\n              aria-label=\"Close Instructions\"\n            >\n              <XMarkIcon className=\"text-white h-6 w-6\" />\n            </button>\n\n            {/* Instruction Image */}\n            {instructions.length > 0 && step < instructions.length && (\n              <div className=\"flex flex-col items-center\">\n                <Image\n                  src={instructions[step].image}\n                  alt={`Step ${step + 1}`}\n                  width={700}\n                  height={400}\n                  priority\n                />\n              </div>\n            )}\n\n            {/* Navigation Controls */}\n            <div className=\"absolute left-0 right-0 bottom-4 top-4 flex justify-between items-center\">\n              {/* Previous Button */}\n              <button\n                onClick={() => handleClick(-1)}\n                aria-label=\"Previous Step\"\n                className=\"cursor-pointer\"\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  strokeWidth={1.5}\n                  stroke=\"currentColor\"\n                  className=\"w-10 h-10\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d=\"M10.5 19.5 3 12m0 0 7.5-7.5M3 12h18\"\n                  />\n                </svg>\n              </button>\n\n              {/* Next Button */}\n              <button\n                onClick={() => handleClick(1)}\n                aria-label=\"Next Step\"\n                className=\"cursor-pointer\"\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  strokeWidth={1.5}\n                  stroke=\"currentColor\"\n                  className=\"w-10 h-10\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d=\"M13.5 4.5 21 12m0 0-7.5 7.5M21 12H3\"\n                  />\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Carousel;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAaA,MAAM,WAAW,CAAC,EAAE,YAAY,EAAkC;;IAChE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEzD,MAAM,cAAc,CAAC;QACnB,MAAM,UAAU,OAAO;QACvB,IAAI,WAAW,GAAG;YAChB,QAAQ,WAAW,aAAa,MAAM,GAAG,IAAI;QAC/C;IACF;IAEA,qBACE,6LAAC;;0BAEC,6LAAC;gBACC,WAAU;gBACV,SAAS,IAAM,oBAAoB;gBACnC,cAAW;0BACZ;;;;;;YAKA,kCACC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC;4BACC,SAAS,IAAM,oBAAoB;4BACnC,WAAU;4BACV,cAAW;sCAEX,cAAA,6LAAC,oNAAA,CAAA,YAAS;gCAAC,WAAU;;;;;;;;;;;wBAItB,aAAa,MAAM,GAAG,KAAK,OAAO,aAAa,MAAM,kBACpD,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;gCACJ,KAAK,YAAY,CAAC,KAAK,CAAC,KAAK;gCAC7B,KAAK,CAAC,KAAK,EAAE,OAAO,GAAG;gCACvB,OAAO;gCACP,QAAQ;gCACR,QAAQ;;;;;;;;;;;sCAMd,6LAAC;4BAAI,WAAU;;8CAEb,6LAAC;oCACC,SAAS,IAAM,YAAY,CAAC;oCAC5B,cAAW;oCACX,WAAU;8CAEV,cAAA,6LAAC;wCACC,OAAM;wCACN,MAAK;wCACL,SAAQ;wCACR,aAAa;wCACb,QAAO;wCACP,WAAU;kDAEV,cAAA,6LAAC;4CACC,eAAc;4CACd,gBAAe;4CACf,GAAE;;;;;;;;;;;;;;;;8CAMR,6LAAC;oCACC,SAAS,IAAM,YAAY;oCAC3B,cAAW;oCACX,WAAU;8CAEV,cAAA,6LAAC;wCACC,OAAM;wCACN,MAAK;wCACL,SAAQ;wCACR,aAAa;wCACb,QAAO;wCACP,WAAU;kDAEV,cAAA,6LAAC;4CACC,eAAc;4CACd,gBAAe;4CACf,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUtB;GAnGM;KAAA;uCAqGS"}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/components/game-components/modals/InstructionDialog.tsx"],"sourcesContent":["// InstructionDialog.tsx\nimport Carousel from \"./Carousel\";\nimport { GameType } from \"@/types\";\nimport { XMarkIcon } from \"@heroicons/react/24/outline\";\n\nconst InstructionDialog = ({\n  gameInfo,\n  onClose\n}: {\n  gameInfo: GameType;\n  onClose: () => void;\n}) => {\n  const instructions = gameInfo.instructions || [];\n\n  return (\n    <div className=\"bg-game-background absolute inset-0 flex flex-col items-center justify-center p-8\">\n      <div className=\"relative w-full h-full flex flex-col items-center justify-center\">\n        {/* Close Button */}\n        <button\n          onClick={onClose}\n          className=\"absolute top-4 right-4 cursor-pointer z-30 flex items-center justify-center bg-gray-700 hover:bg-gray-600 p-2 rounded-full\"\n          aria-label=\"Close Instructions\"\n        >\n          <XMarkIcon className=\"text-white h-6 w-6\" />\n        </button>\n\n        {/* Instructions Content */}\n        <div className=\"w-full h-full flex items-center justify-center\">\n          <Carousel instructions={instructions} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InstructionDialog;"],"names":[],"mappings":"AAAA,wBAAwB;;;;;AACxB;AAEA;;;;AAEA,MAAM,oBAAoB,CAAC,EACzB,QAAQ,EACR,OAAO,EAIR;IACC,MAAM,eAAe,SAAS,YAAY,IAAI,EAAE;IAEhD,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BAEb,6LAAC;oBACC,SAAS;oBACT,WAAU;oBACV,cAAW;8BAEX,cAAA,6LAAC,oNAAA,CAAA,YAAS;wBAAC,WAAU;;;;;;;;;;;8BAIvB,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC,iKAAA,CAAA,UAAQ;wBAAC,cAAc;;;;;;;;;;;;;;;;;;;;;;AAKlC;KA5BM;uCA8BS"}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/components/game-components/utils/TNT/Ball.ts"],"sourcesContent":["export const BASE_COLOR = \"#FDDA0D\";\nexport const HIGHLIGHT_COLOR = \"#007FFF\";\nexport const GLOW_COLOR = \"#00FF00\";\nexport const WRONG_COLOR = \"#FF0000\";\nexport const CORRECT_COLOR = \"#00FF00\";\n\nexport class Ball {\n  x: number;\n  y: number;\n  angle: number;\n  radius: number;\n  vx: number;\n  vy: number;\n  color: string;\n\n  constructor(\n    x: number,\n    y: number,\n    angle: number,\n    ballRadius: number,\n    currentSpeed: number,\n    color: string\n  ) {\n    this.x = x;\n    this.y = y;\n    this.angle = angle;\n    this.radius = ballRadius;\n    this.vx = Math.cos(this.angle) * currentSpeed;\n    this.vy = Math.sin(this.angle) * currentSpeed;\n    this.color = color;\n  }\n\n  getColor(): string {\n    return this.color;\n  }\n\n  reset = () => {\n    this.color = BASE_COLOR;\n  };\n\n  addMarks(\n    ball: Ball,\n    ctx: CanvasRenderingContext2D,\n    isWrongBall: boolean | null,\n    isCorrectBall: boolean | null\n  ): void {\n    ctx.font = `${ball.radius}px Arial`;\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n\n    if (isCorrectBall) {\n      ctx.fillStyle = \"rgb(11, 218, 81)\";\n      ctx.fillText(\"✓\", ball.x, ball.y);\n    } else if (isWrongBall) {\n      ctx.fillStyle = \"red\";\n      ctx.fillText(\"✕\", ball.x, ball.y);\n    }\n  }\n\n  drawBall(\n    ball: Ball,\n    isHighlighted: boolean,\n    ctx: CanvasRenderingContext2D,\n    isWrongBall: boolean | null,\n    isCorrectBall: boolean | null\n  ): void {\n    ctx.beginPath();\n    ctx.arc(ball.x, ball.y, ball.radius, 0, Math.PI * 2);\n    ctx.fillStyle = isHighlighted ? HIGHLIGHT_COLOR : this.getColor();\n    ctx.fill();\n    ctx.closePath();\n\n    this.addMarks(ball, ctx, isWrongBall, isCorrectBall);\n  }\n}\n\n// Create balls in different regions\nconst createRegions = (canvasWidth: number, canvasHeight: number) => [\n  { x: canvasWidth * 0.25, y: canvasHeight * 0.25 },\n  { x: canvasWidth * 0.75, y: canvasHeight * 0.25 },\n  { x: canvasWidth * 0.25, y: canvasHeight * 0.5 },\n  { x: canvasWidth * 0.75, y: canvasHeight * 0.5 },\n  { x: canvasWidth * 0.25, y: canvasHeight * 0.75 },\n  { x: canvasWidth * 0.75, y: canvasHeight * 0.75 },\n  { x: canvasWidth * 0.5, y: canvasHeight * 0.25 },\n  { x: canvasWidth * 0.5, y: canvasHeight * 0.75 }\n];\n\nexport const createBalls = <T extends Ball>(\n  canvas: HTMLCanvasElement,\n  ballRadius: number,\n  numberOfBalls: number,\n  BallClass: new (...args: any[]) => T,\n  ...extraArgs: any[]\n): T[] => {\n  const balls: T[] = [];\n  const startingSpeed = 0.01;\n  const regions = createRegions(canvas.width, canvas.height);\n\n  for (let i = 0; i < numberOfBalls; i++) {\n    const randomRegion = regions[i % regions.length];\n    const variation = 50 * (numberOfBalls - 7) ** 2;\n    const randomX = Math.random() * variation - variation / 2;\n    const randomY = Math.random() * variation - variation / 2;\n    const angle = Math.random() * 2 * Math.PI;\n\n    balls.push(\n      new BallClass(\n        randomRegion.x + randomX,\n        randomRegion.y + randomY,\n        angle,\n        ballRadius,\n        startingSpeed,\n        BASE_COLOR,\n        ...extraArgs\n      )\n    );\n  }\n\n  return balls;\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 364, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 370, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/components/game-components/utils/TNT/BallPhysics.ts"],"sourcesContent":["import { Ball } from \"./Ball\";\n\nexport const resolveCollisions = <BallType extends Ball>(\n  balls: BallType[],\n  currentSpeed: number,\n  deltaTime: number\n) => {\n  for (let i = 0; i < balls.length; i++) {\n    for (let j = i + 1; j < balls.length; j++) {\n      const ballA = balls[i];\n      const ballB = balls[j];\n\n      const dx = ballB.x - ballA.x;\n      const dy = ballB.y - ballA.y;\n      const distance = Math.sqrt(dx * dx + dy * dy) || 1e-6;\n\n      // Skip if distance is too small to avoid invalid normal/tangent calculation\n      if (distance < 1e-6) continue;\n\n      // Check if balls are colliding\n      if (distance < ballA.radius + ballB.radius) {\n        const overlap = ballA.radius + ballB.radius - distance;\n\n        // Separate the balls to remove overlap (scaled by deltaTime)\n        const normalX = dx / distance;\n        const normalY = dy / distance;\n\n        if (isNaN(normalX) || isNaN(normalY)) continue; // Prevent invalid normals\n\n        const separationX = (normalX * overlap) / 2;\n        const separationY = (normalY * overlap) / 2;\n\n        ballA.x -= separationX / 2;\n        ballA.y -= separationY / 2;\n        ballB.x += separationX / 2;\n        ballB.y += separationY / 2;\n\n        // Calculate velocities along normal and tangent\n        const tangentX = -normalY;\n        const tangentY = normalX;\n\n        const velocityANormal = ballA.vx * normalX + ballA.vy * normalY;\n        const velocityATangent = ballA.vx * tangentX + ballA.vy * tangentY;\n\n        const velocityBNormal = ballB.vx * normalX + ballB.vy * normalY;\n        const velocityBTangent = ballB.vx * tangentX + ballB.vy * tangentY;\n\n        // Swap normal velocities (elastic collision)\n        const newVelocityANormal = velocityBNormal;\n        const newVelocityBNormal = velocityANormal;\n\n        // Combine velocities (keep tangential component unchanged)\n        ballA.vx =\n          (newVelocityANormal * normalX + velocityATangent * tangentX) *\n          deltaTime;\n        ballA.vy =\n          (newVelocityANormal * normalY + velocityATangent * tangentY) *\n          deltaTime;\n\n        ballB.vx =\n          (newVelocityBNormal * normalX + velocityBTangent * tangentX) *\n          deltaTime;\n        ballB.vy =\n          (newVelocityBNormal * normalY + velocityBTangent * tangentY) *\n          deltaTime;\n\n        // Adjust to maintain constant speed (normalize and scale)\n        const magnitudeA = Math.sqrt(ballA.vx * ballA.vx + ballA.vy * ballA.vy);\n        const magnitudeB = Math.sqrt(ballB.vx * ballB.vx + ballB.vy * ballB.vy);\n\n        if (magnitudeA > 1e-6) {\n          ballA.vx = (ballA.vx / magnitudeA) * currentSpeed;\n          ballA.vy = (ballA.vy / magnitudeA) * currentSpeed;\n        }\n\n        if (magnitudeB > 1e-6) {\n          ballB.vx = (ballB.vx / magnitudeB) * currentSpeed;\n          ballB.vy = (ballB.vy / magnitudeB) * currentSpeed;\n        }\n      }\n    }\n  }\n};\n\nexport const resolveCollisionsWithWalls = <BallType extends Ball>(\n  balls: BallType[],\n  currentSpeed: number,\n  width: number,\n  height: number,\n  deltaTime: number\n) => {\n  balls.forEach((ball) => {\n    // Move the ball, scaling velocity by deltaTime for consistent movement\n    const nextX = ball.x + ball.vx * deltaTime;\n    const nextY = ball.y + ball.vy * deltaTime;\n\n    ball.x = nextX;\n    ball.y = nextY;\n\n    // Regular wall collisions\n    if (ball.x - ball.radius < 0) {\n      ball.x = ball.radius;\n      ball.vx *= -1;\n    }\n    if (ball.x + ball.radius > width) {\n      ball.x = width - ball.radius;\n      ball.vx *= -1;\n    }\n    if (ball.y - ball.radius < 0) {\n      ball.y = ball.radius;\n      ball.vy *= -1;\n    }\n    if (ball.y + ball.radius > height) {\n      ball.y = height - ball.radius;\n      ball.vy *= -1;\n    }\n\n    // Maintain constant speed\n    const currentSpeedMagnitude = Math.sqrt(\n      ball.vx * ball.vx + ball.vy * ball.vy\n    );\n    if (\n      currentSpeedMagnitude > 1e-6 &&\n      currentSpeedMagnitude !== currentSpeed\n    ) {\n      const scale = currentSpeed / currentSpeedMagnitude;\n      ball.vx *= scale;\n      ball.vy *= scale;\n    }\n  });\n};\n\n"],"names":[],"mappings":";;;;AAEO,MAAM,oBAAoB,CAC/B,OACA,cACA;IAEA,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;QACrC,IAAK,IAAI,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;YACzC,MAAM,QAAQ,KAAK,CAAC,EAAE;YACtB,MAAM,QAAQ,KAAK,CAAC,EAAE;YAEtB,MAAM,KAAK,MAAM,CAAC,GAAG,MAAM,CAAC;YAC5B,MAAM,KAAK,MAAM,CAAC,GAAG,MAAM,CAAC;YAC5B,MAAM,WAAW,KAAK,IAAI,CAAC,KAAK,KAAK,KAAK,OAAO;YAEjD,4EAA4E;YAC5E,IAAI,WAAW,MAAM;YAErB,+BAA+B;YAC/B,IAAI,WAAW,MAAM,MAAM,GAAG,MAAM,MAAM,EAAE;gBAC1C,MAAM,UAAU,MAAM,MAAM,GAAG,MAAM,MAAM,GAAG;gBAE9C,6DAA6D;gBAC7D,MAAM,UAAU,KAAK;gBACrB,MAAM,UAAU,KAAK;gBAErB,IAAI,MAAM,YAAY,MAAM,UAAU,UAAU,0BAA0B;gBAE1E,MAAM,cAAc,AAAC,UAAU,UAAW;gBAC1C,MAAM,cAAc,AAAC,UAAU,UAAW;gBAE1C,MAAM,CAAC,IAAI,cAAc;gBACzB,MAAM,CAAC,IAAI,cAAc;gBACzB,MAAM,CAAC,IAAI,cAAc;gBACzB,MAAM,CAAC,IAAI,cAAc;gBAEzB,gDAAgD;gBAChD,MAAM,WAAW,CAAC;gBAClB,MAAM,WAAW;gBAEjB,MAAM,kBAAkB,MAAM,EAAE,GAAG,UAAU,MAAM,EAAE,GAAG;gBACxD,MAAM,mBAAmB,MAAM,EAAE,GAAG,WAAW,MAAM,EAAE,GAAG;gBAE1D,MAAM,kBAAkB,MAAM,EAAE,GAAG,UAAU,MAAM,EAAE,GAAG;gBACxD,MAAM,mBAAmB,MAAM,EAAE,GAAG,WAAW,MAAM,EAAE,GAAG;gBAE1D,6CAA6C;gBAC7C,MAAM,qBAAqB;gBAC3B,MAAM,qBAAqB;gBAE3B,2DAA2D;gBAC3D,MAAM,EAAE,GACN,CAAC,qBAAqB,UAAU,mBAAmB,QAAQ,IAC3D;gBACF,MAAM,EAAE,GACN,CAAC,qBAAqB,UAAU,mBAAmB,QAAQ,IAC3D;gBAEF,MAAM,EAAE,GACN,CAAC,qBAAqB,UAAU,mBAAmB,QAAQ,IAC3D;gBACF,MAAM,EAAE,GACN,CAAC,qBAAqB,UAAU,mBAAmB,QAAQ,IAC3D;gBAEF,0DAA0D;gBAC1D,MAAM,aAAa,KAAK,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,EAAE,GAAG,MAAM,EAAE,GAAG,MAAM,EAAE;gBACtE,MAAM,aAAa,KAAK,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,EAAE,GAAG,MAAM,EAAE,GAAG,MAAM,EAAE;gBAEtE,IAAI,aAAa,MAAM;oBACrB,MAAM,EAAE,GAAG,AAAC,MAAM,EAAE,GAAG,aAAc;oBACrC,MAAM,EAAE,GAAG,AAAC,MAAM,EAAE,GAAG,aAAc;gBACvC;gBAEA,IAAI,aAAa,MAAM;oBACrB,MAAM,EAAE,GAAG,AAAC,MAAM,EAAE,GAAG,aAAc;oBACrC,MAAM,EAAE,GAAG,AAAC,MAAM,EAAE,GAAG,aAAc;gBACvC;YACF;QACF;IACF;AACF;AAEO,MAAM,6BAA6B,CACxC,OACA,cACA,OACA,QACA;IAEA,MAAM,OAAO,CAAC,CAAC;QACb,uEAAuE;QACvE,MAAM,QAAQ,KAAK,CAAC,GAAG,KAAK,EAAE,GAAG;QACjC,MAAM,QAAQ,KAAK,CAAC,GAAG,KAAK,EAAE,GAAG;QAEjC,KAAK,CAAC,GAAG;QACT,KAAK,CAAC,GAAG;QAET,0BAA0B;QAC1B,IAAI,KAAK,CAAC,GAAG,KAAK,MAAM,GAAG,GAAG;YAC5B,KAAK,CAAC,GAAG,KAAK,MAAM;YACpB,KAAK,EAAE,IAAI,CAAC;QACd;QACA,IAAI,KAAK,CAAC,GAAG,KAAK,MAAM,GAAG,OAAO;YAChC,KAAK,CAAC,GAAG,QAAQ,KAAK,MAAM;YAC5B,KAAK,EAAE,IAAI,CAAC;QACd;QACA,IAAI,KAAK,CAAC,GAAG,KAAK,MAAM,GAAG,GAAG;YAC5B,KAAK,CAAC,GAAG,KAAK,MAAM;YACpB,KAAK,EAAE,IAAI,CAAC;QACd;QACA,IAAI,KAAK,CAAC,GAAG,KAAK,MAAM,GAAG,QAAQ;YACjC,KAAK,CAAC,GAAG,SAAS,KAAK,MAAM;YAC7B,KAAK,EAAE,IAAI,CAAC;QACd;QAEA,0BAA0B;QAC1B,MAAM,wBAAwB,KAAK,IAAI,CACrC,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK,EAAE;QAEvC,IACE,wBAAwB,QACxB,0BAA0B,cAC1B;YACA,MAAM,QAAQ,eAAe;YAC7B,KAAK,EAAE,IAAI;YACX,KAAK,EAAE,IAAI;QACb;IACF;AACF"}},
    {"offset": {"line": 463, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 469, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/components/game-components/utils/TNT/BallVariants.ts"],"sourcesContent":["import { Ball, HIGHLIGHT_COLOR } from \"./Ball\";\nimport { MutableRefObject } from \"react\";\n\nexport class GlowBall extends Ball {\n  strobeInterval: NodeJS.Timeout | null = null;\n  isGlowed: boolean;\n  reactionTimesRef: MutableRefObject<number[]>;\n  glowIntensity: number;\n  maxGlowIntensity: number;\n  shadowSize: number;\n  lastGlowedTime: number = 0;\n\n  constructor(\n    x: number,\n    y: number,\n    angle: number,\n    ballRadius: number,\n    currentSpeed: number,\n    color: string,\n    reactionTimesRef: MutableRefObject<number[]>\n  ) {\n    super(x, y, angle, ballRadius, currentSpeed, color);\n    this.reactionTimesRef = reactionTimesRef;\n    this.isGlowed = false;\n    this.glowIntensity = 0;\n    this.maxGlowIntensity = 1;\n    this.shadowSize = 0;\n  }\n\n  reset = () => {\n    this.isGlowed = false;\n    this.glowIntensity = 0;\n    this.shadowSize = 0;\n    if (this.strobeInterval) {\n      clearInterval(this.strobeInterval);\n      this.strobeInterval = null;\n    }\n  };\n\n  glow() {\n    this.isGlowed = true;\n    this.lastGlowedTime = Date.now();\n    this.increaseGlow();\n  }\n\n  increaseGlow() {\n    this.glowIntensity = 0;\n    this.shadowSize = 10;\n\n    this.strobeInterval = setInterval(() => {\n      if (this.shadowSize < 50) {\n        this.shadowSize += 1;\n      } else {\n        clearInterval(this.strobeInterval!);\n      }\n    }, 100);\n  }\n\n  click(glowNextBall: () => void) {\n    this.isGlowed = false;\n    this.reset();\n    this.reactionTimesRef.current.push(Date.now() - this.lastGlowedTime);\n    glowNextBall();\n  }\n\n  getColor(): string {\n    return this.color;\n  }\n\n  drawBall(\n    ball: Ball,\n    isHighlighted: boolean,\n    ctx: CanvasRenderingContext2D,\n    isWrongBall: boolean | null,\n    isCorrectBall: boolean | null\n  ): void {\n    ctx.save();\n\n    if (this.isGlowed) {\n      ctx.shadowBlur = this.shadowSize;\n      ctx.shadowColor = this.color;\n    }\n\n    // Draw the ball\n    ctx.beginPath();\n    ctx.arc(ball.x, ball.y, ball.radius, 0, Math.PI * 2);\n    ctx.fillStyle = isHighlighted ? HIGHLIGHT_COLOR : this.getColor();\n    ctx.fill();\n    ctx.closePath();\n\n    ctx.shadowBlur = 0;\n    ctx.shadowColor = \"transparent\";\n    ctx.restore();\n\n    this.addMarks(ball, ctx, isWrongBall, isCorrectBall);\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM,iBAAiB,kKAAA,CAAA,OAAI;IAChC,iBAAwC,KAAK;IAC7C,SAAkB;IAClB,iBAA6C;IAC7C,cAAsB;IACtB,iBAAyB;IACzB,WAAmB;IACnB,iBAAyB,EAAE;IAE3B,YACE,CAAS,EACT,CAAS,EACT,KAAa,EACb,UAAkB,EAClB,YAAoB,EACpB,KAAa,EACb,gBAA4C,CAC5C;QACA,KAAK,CAAC,GAAG,GAAG,OAAO,YAAY,cAAc;QAC7C,IAAI,CAAC,gBAAgB,GAAG;QACxB,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,aAAa,GAAG;QACrB,IAAI,CAAC,gBAAgB,GAAG;QACxB,IAAI,CAAC,UAAU,GAAG;IACpB;IAEA,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,aAAa,GAAG;QACrB,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,cAAc,IAAI,CAAC,cAAc;YACjC,IAAI,CAAC,cAAc,GAAG;QACxB;IACF,EAAE;IAEF,OAAO;QACL,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,cAAc,GAAG,KAAK,GAAG;QAC9B,IAAI,CAAC,YAAY;IACnB;IAEA,eAAe;QACb,IAAI,CAAC,aAAa,GAAG;QACrB,IAAI,CAAC,UAAU,GAAG;QAElB,IAAI,CAAC,cAAc,GAAG,YAAY;YAChC,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI;gBACxB,IAAI,CAAC,UAAU,IAAI;YACrB,OAAO;gBACL,cAAc,IAAI,CAAC,cAAc;YACnC;QACF,GAAG;IACL;IAEA,MAAM,YAAwB,EAAE;QAC9B,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,KAAK;QACV,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,CAAC,cAAc;QACnE;IACF;IAEA,WAAmB;QACjB,OAAO,IAAI,CAAC,KAAK;IACnB;IAEA,SACE,IAAU,EACV,aAAsB,EACtB,GAA6B,EAC7B,WAA2B,EAC3B,aAA6B,EACvB;QACN,IAAI,IAAI;QAER,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU;YAChC,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK;QAC9B;QAEA,gBAAgB;QAChB,IAAI,SAAS;QACb,IAAI,GAAG,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,MAAM,EAAE,GAAG,KAAK,EAAE,GAAG;QAClD,IAAI,SAAS,GAAG,gBAAgB,kKAAA,CAAA,kBAAe,GAAG,IAAI,CAAC,QAAQ;QAC/D,IAAI,IAAI;QACR,IAAI,SAAS;QAEb,IAAI,UAAU,GAAG;QACjB,IAAI,WAAW,GAAG;QAClB,IAAI,OAAO;QAEX,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,aAAa;IACxC;AACF"}},
    {"offset": {"line": 545, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 551, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/components/game-components/utils/Grid/Point.ts"],"sourcesContent":["export class Point {\n  row: number;\n  col: number;\n  x: number;\n  y: number;\n  isYellow: boolean = false;\n  isHovered: boolean = false;\n\n  constructor(row: number, col: number, x: number, y: number) {\n    this.row = row;\n    this.col = col;\n    this.x = x;\n    this.y = y;\n  }\n\n  setYellow(isYellow: boolean) {\n    this.isYellow = isYellow;\n  }\n\n  setHovered(isHovered: boolean) {\n    this.isHovered = isHovered;\n  }\n\n  isEquals(other: Point): boolean {\n    return this.x === other.x && this.y === other.y;\n  }\n\n  greaterThan(other: Point): boolean {\n    if (this.x !== other.x) {\n      return this.x > other.x;\n    }\n    return this.y > other.y;\n  }\n\n  toString(): string {\n    return `${this.col},${this.row}`;\n  }\n\n  draw(\n    ctx: CanvasRenderingContext2D,\n    showYellow: boolean,\n    highlightColor: string,\n    fadedColor: string\n  ) {\n    ctx.fillStyle = showYellow\n      ? this.isYellow\n        ? highlightColor\n        : fadedColor\n      : \"#FFFFFF\";\n\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, 8, 0, Math.PI * 2);\n    ctx.fill();\n\n    if (this.isHovered) {\n      ctx.strokeStyle = highlightColor;\n      ctx.lineWidth = 2;\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, 12, 0, Math.PI * 2);\n      ctx.stroke();\n    }\n  }\n}\n\nexport class Polygon {\n  points: Point[];\n  constructor() {\n    this.points = [];\n  }\n\n  addPoint(point: Point) {\n    this.points.push(point);\n  }\n\n  isEqual(polygon: Polygon): boolean {\n    if (this.points.length !== polygon.points.length) {\n      return false;\n    }\n\n    const sortedPoints1 = this.points\n      .slice()\n      .sort((a, b) => (a.greaterThan(b) ? 1 : -1));\n    const sortedPoints2 = polygon.points\n      .slice()\n      .sort((a, b) => (a.greaterThan(b) ? 1 : -1));\n\n    for (let i = 0; i < sortedPoints1.length; i++) {\n      if (!sortedPoints1[i].isEquals(sortedPoints2[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n"],"names":[],"mappings":";;;;AAAO,MAAM;IACX,IAAY;IACZ,IAAY;IACZ,EAAU;IACV,EAAU;IACV,WAAoB,MAAM;IAC1B,YAAqB,MAAM;IAE3B,YAAY,GAAW,EAAE,GAAW,EAAE,CAAS,EAAE,CAAS,CAAE;QAC1D,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,CAAC,CAAC,GAAG;QACT,IAAI,CAAC,CAAC,GAAG;IACX;IAEA,UAAU,QAAiB,EAAE;QAC3B,IAAI,CAAC,QAAQ,GAAG;IAClB;IAEA,WAAW,SAAkB,EAAE;QAC7B,IAAI,CAAC,SAAS,GAAG;IACnB;IAEA,SAAS,KAAY,EAAW;QAC9B,OAAO,IAAI,CAAC,CAAC,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,MAAM,CAAC;IACjD;IAEA,YAAY,KAAY,EAAW;QACjC,IAAI,IAAI,CAAC,CAAC,KAAK,MAAM,CAAC,EAAE;YACtB,OAAO,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC;QACzB;QACA,OAAO,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC;IACzB;IAEA,WAAmB;QACjB,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE;IAClC;IAEA,KACE,GAA6B,EAC7B,UAAmB,EACnB,cAAsB,EACtB,UAAkB,EAClB;QACA,IAAI,SAAS,GAAG,aACZ,IAAI,CAAC,QAAQ,GACX,iBACA,aACF;QAEJ,IAAI,SAAS;QACb,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,GAAG,GAAG,KAAK,EAAE,GAAG;QACxC,IAAI,IAAI;QAER,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,WAAW,GAAG;YAClB,IAAI,SAAS,GAAG;YAChB,IAAI,SAAS;YACb,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,GAAG;YACzC,IAAI,MAAM;QACZ;IACF;AACF;AAEO,MAAM;IACX,OAAgB;IAChB,aAAc;QACZ,IAAI,CAAC,MAAM,GAAG,EAAE;IAClB;IAEA,SAAS,KAAY,EAAE;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;IACnB;IAEA,QAAQ,OAAgB,EAAW;QACjC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,QAAQ,MAAM,CAAC,MAAM,EAAE;YAChD,OAAO;QACT;QAEA,MAAM,gBAAgB,IAAI,CAAC,MAAM,CAC9B,KAAK,GACL,IAAI,CAAC,CAAC,GAAG,IAAO,EAAE,WAAW,CAAC,KAAK,IAAI,CAAC;QAC3C,MAAM,gBAAgB,QAAQ,MAAM,CACjC,KAAK,GACL,IAAI,CAAC,CAAC,GAAG,IAAO,EAAE,WAAW,CAAC,KAAK,IAAI,CAAC;QAE3C,IAAK,IAAI,IAAI,GAAG,IAAI,cAAc,MAAM,EAAE,IAAK;YAC7C,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,GAAG;gBAChD,OAAO;YACT;QACF;QAEA,OAAO;IACT;AACF"}},
    {"offset": {"line": 625, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 631, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/components/game-components/utils/Grid/Line.ts"],"sourcesContent":["import { Point } from \"./Point\";\n\nexport class Line {\n  start: Point;\n  end: Point;\n  isHighlighted: boolean = false;\n  color: string = \"#FFFF00\";\n  opacity: number = 1;\n\n  constructor(start: Point, end: Point) {\n    this.start = start;\n    this.end = end;\n  }\n\n  setHighlighted(isHighlighted: boolean, color: string = \"#00FF00\") {\n    this.isHighlighted = isHighlighted;\n    this.color = color; // Green when highlighted\n    this.opacity = 1; // Reset opacity to 1 when highlighted\n  }\n\n  isEquals(other: Line): boolean {\n    return (\n      (this.start.isEquals(other.start) && this.end.isEquals(other.end)) ||\n      (this.start.isEquals(other.end) && this.end.isEquals(other.start))\n    );\n  }\n\n  fadeOut(duration: number) {\n    const fadeStep = 50; // Time between each fade step (ms)\n    const decrement = 1 / (duration / fadeStep); // Opacity decrement per step\n\n    const fadeInterval = setInterval(() => {\n      this.opacity -= decrement;\n      if (this.opacity <= 0) {\n        this.opacity = 0; // Clamp opacity at 0\n        clearInterval(fadeInterval); // Stop fading\n      }\n    }, fadeStep);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    ctx.strokeStyle = this.getRGBAColor();\n    ctx.lineWidth = 2;\n    ctx.globalAlpha = this.opacity; // Apply the opacity\n    ctx.beginPath();\n    ctx.moveTo(this.start.x, this.start.y);\n    ctx.lineTo(this.end.x, this.end.y);\n    ctx.stroke();\n    ctx.globalAlpha = 1; // Reset globalAlpha after drawing\n  }\n\n  private getRGBAColor(): string {\n    // Convert hex color to RGBA with current opacity\n    const hex = this.color.replace(\"#\", \"\");\n    const r = parseInt(hex.substring(0, 2), 16);\n    const g = parseInt(hex.substring(2, 4), 16);\n    const b = parseInt(hex.substring(4, 6), 16);\n    return `rgba(${r}, ${g}, ${b}, ${this.opacity})`;\n  }\n}\n"],"names":[],"mappings":";;;AAEO,MAAM;IACX,MAAa;IACb,IAAW;IACX,gBAAyB,MAAM;IAC/B,QAAgB,UAAU;IAC1B,UAAkB,EAAE;IAEpB,YAAY,KAAY,EAAE,GAAU,CAAE;QACpC,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,GAAG,GAAG;IACb;IAEA,eAAe,aAAsB,EAAE,QAAgB,SAAS,EAAE;QAChE,IAAI,CAAC,aAAa,GAAG;QACrB,IAAI,CAAC,KAAK,GAAG,OAAO,yBAAyB;QAC7C,IAAI,CAAC,OAAO,GAAG,GAAG,sCAAsC;IAC1D;IAEA,SAAS,KAAW,EAAW;QAC7B,OACE,AAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,KAAK,KAAK,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,GAAG,KAC/D,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,KAAK;IAEpE;IAEA,QAAQ,QAAgB,EAAE;QACxB,MAAM,WAAW,IAAI,mCAAmC;QACxD,MAAM,YAAY,IAAI,CAAC,WAAW,QAAQ,GAAG,6BAA6B;QAE1E,MAAM,eAAe,YAAY;YAC/B,IAAI,CAAC,OAAO,IAAI;YAChB,IAAI,IAAI,CAAC,OAAO,IAAI,GAAG;gBACrB,IAAI,CAAC,OAAO,GAAG,GAAG,qBAAqB;gBACvC,cAAc,eAAe,cAAc;YAC7C;QACF,GAAG;IACL;IAEA,KAAK,GAA6B,EAAE;QAClC,IAAI,WAAW,GAAG,IAAI,CAAC,YAAY;QACnC,IAAI,SAAS,GAAG;QAChB,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,EAAE,oBAAoB;QACpD,IAAI,SAAS;QACb,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACrC,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QACjC,IAAI,MAAM;QACV,IAAI,WAAW,GAAG,GAAG,kCAAkC;IACzD;IAEQ,eAAuB;QAC7B,iDAAiD;QACjD,MAAM,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK;QACpC,MAAM,IAAI,SAAS,IAAI,SAAS,CAAC,GAAG,IAAI;QACxC,MAAM,IAAI,SAAS,IAAI,SAAS,CAAC,GAAG,IAAI;QACxC,MAAM,IAAI,SAAS,IAAI,SAAS,CAAC,GAAG,IAAI;QACxC,OAAO,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IAClD;AACF"}},
    {"offset": {"line": 685, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 691, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/components/game-components/utils/Grid/Polygons.ts"],"sourcesContent":["import { Point, Polygon } from \"./Point\";\nimport { Line } from \"./Line\";\n\nconst doLinesIntersect = (\n  p1: Point,\n  q1: Point,\n  p2: Point,\n  q2: Point\n): boolean => {\n  // Helper to find the orientation of the triplet (p, q, r)\n  // 0 -> Collinear, 1 -> Clockwise, 2 -> Counterclockwise\n  const orientation = (p: Point, q: Point, r: Point): number => {\n    const val = (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n    if (val === 0) return 0; // Collinear\n    return val > 0 ? 1 : 2; // Clockwise or Counterclockwise\n  };\n\n  // Check if point r lies on segment pq\n  const onSegment = (p: Point, q: Point, r: Point): boolean => {\n    return (\n      Math.min(p.x, q.x) <= r.x &&\n      r.x <= Math.max(p.x, q.x) &&\n      Math.min(p.y, q.y) <= r.y &&\n      r.y <= Math.max(p.y, q.y)\n    );\n  };\n\n  const o1 = orientation(p1, q1, p2);\n  const o2 = orientation(p1, q1, q2);\n  const o3 = orientation(p2, q2, p1);\n  const o4 = orientation(p2, q2, q1);\n\n  // General case: segments intersect\n  if (o1 !== o2 && o3 !== o4) return true;\n\n  // Special cases: collinear points\n  if (o1 === 0 && onSegment(p1, q1, p2)) return true;\n  if (o2 === 0 && onSegment(p1, q1, q2)) return true;\n  if (o3 === 0 && onSegment(p2, q2, p1)) return true;\n  if (o4 === 0 && onSegment(p2, q2, q1)) return true;\n\n  return false; // No intersection\n};\n\nconst isSimplePolygon = (polygon: Point[]): boolean => {\n  const n = polygon.length;\n\n  // A polygon must have at least 3 points\n  if (n < 3) return false;\n\n  // Check all pairs of edges for intersection\n  for (let i = 0; i < n; i++) {\n    for (let j = i + 1; j < n; j++) {\n      // Edges (p1, q1) and (p2, q2)\n      const p1 = polygon[i];\n      const q1 = polygon[(i + 1) % n];\n      const p2 = polygon[j];\n      const q2 = polygon[(j + 1) % n];\n\n      // Skip adjacent edges (including wrap-around edge)\n      if (\n        j === i + 1 ||\n        (i === 0 && j === n - 1) // First and last edges are adjacent in closed polygons\n      ) {\n        continue;\n      }\n\n      // Check if these two edges intersect\n      if (doLinesIntersect(p1, q1, p2, q2)) {\n        return false; // Invalid polygon: edges intersect\n      }\n    }\n  }\n\n  return true; // All edges are valid\n};\n\nexport const detectPolygons = (\n  lines: Line[],\n  completedPolygons: Polygon[],\n  onPolygonDetected: (polygon: Polygon) => void,\n  onDuplicatePolygon: (polygon: Polygon) => void,\n  onCyclicPolygonDetected: (polygon: Polygon) => void\n): Set<Point> | null => {\n  const adjList = new Map<Point, Set<Point>>();\n  const detectedPolygons: Set<string> = new Set(); // Track unique polygons using a stringified key\n\n  // Helper to generate a unique key for a polygon\n  const generatePolygonKey = (polygon: Polygon): string => {\n    const sortedPoints = Array.from(polygon.points)\n      .map((p) => `${p.x},${p.y}`)\n      .sort(); // Sort to ensure consistent key\n    return sortedPoints.join(\"-\");\n  };\n\n  // Build adjacency list\n  lines.forEach((line) => {\n    if (!adjList.has(line.start)) adjList.set(line.start, new Set());\n    if (!adjList.has(line.end)) adjList.set(line.end, new Set());\n\n    adjList.get(line.start)!.add(line.end);\n    adjList.get(line.end)!.add(line.start);\n  });\n\n  const visited = new Set<Point>();\n  const stack: Point[] = [];\n\n  const dfs = (current: Point, start: Point, path: Point[]) => {\n    stack.push(current);\n\n    adjList.get(current)?.forEach((neighbor) => {\n      if (neighbor === start && path.length >= 3) {\n        // Complete cycle found\n        const polygon = new Polygon();\n        stack.forEach((point) => polygon.addPoint(point));\n        const polygonKey = generatePolygonKey(polygon);\n\n        if (!detectedPolygons.has(polygonKey)) {\n          detectedPolygons.add(polygonKey);\n\n          const polygonArray = Array.from(polygon.points);\n          if (!isSimplePolygon(polygonArray)) {\n            onCyclicPolygonDetected(polygon);\n            return;\n          }\n\n          if (\n            !completedPolygons.some((p) => generatePolygonKey(p) === polygonKey)\n          ) {\n            onPolygonDetected(polygon);\n          } else {\n            onDuplicatePolygon(polygon);\n          }\n        }\n        return;\n      }\n\n      if (!path.includes(neighbor)) {\n        dfs(neighbor, start, [...path, neighbor]);\n      }\n    });\n\n    stack.pop();\n  };\n\n  adjList.forEach((_, point) => {\n    if (!visited.has(point)) {\n      dfs(point, point, [point]);\n      visited.add(point);\n    }\n  });\n\n  return detectedPolygons.size > 0 ? null : null;\n};\n\n// Highlight and fade the polygon, only after a valid one is detected\nexport const highlightAndFadePolygon = (\n  polygon: Polygon,\n  lines: Line[],\n  color: string = \"#00FF00\" // Default to green\n) => {\n  const linesToFade: Line[] = [];\n\n  // Find and highlight lines forming the polygon\n  lines.forEach((line) => {\n    if (\n      polygon.points.includes(line.start) &&\n      polygon.points.includes(line.end)\n    ) {\n      line.setHighlighted(true, color); // Highlight with the specified color\n      linesToFade.push(line);\n    }\n  });\n\n  // Fade out the lines over 1 second\n  setTimeout(() => {\n    linesToFade.forEach((line) => {\n      line.fadeOut(1000);\n    });\n  }, 0);\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 826, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 832, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/components/game-components/utils/Countdown.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nexport const Countdown = ({\n  onCountdownEnd\n}: {\n  onCountdownEnd: () => void;\n}) => {\n  const [count, setCount] = useState<number>(3);\n\n  useEffect(() => {\n    if (count > 0) {\n      const timer = setTimeout(() => setCount(count - 1), 900);\n      return () => clearTimeout(timer);\n    } else {\n      const timer = setTimeout(() => onCountdownEnd(), 900);\n      return () => clearTimeout(timer);\n    }\n  }, [count, onCountdownEnd]);\n\n  return (\n    <div className=\"absolute top-0 left-0 right-0 bottom-0 flex items-center justify-center h-screen w-screen bg-game-background\">\n      <h1 className=\"text-white text-9xl font-bold\">\n        {count > 0 ? count : \"Start!\"}\n      </h1>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;;;;AAEO,MAAM,YAAY,CAAC,EACxB,cAAc,EAGf;;IACC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAE3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,IAAI,QAAQ,GAAG;gBACb,MAAM,QAAQ;iDAAW,IAAM,SAAS,QAAQ;gDAAI;gBACpD;2CAAO,IAAM,aAAa;;YAC5B,OAAO;gBACL,MAAM,QAAQ;iDAAW,IAAM;gDAAkB;gBACjD;2CAAO,IAAM,aAAa;;YAC5B;QACF;8BAAG;QAAC;QAAO;KAAe;IAE1B,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAG,WAAU;sBACX,QAAQ,IAAI,QAAQ;;;;;;;;;;;AAI7B;GAxBa;KAAA"}},
    {"offset": {"line": 888, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 894, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 905, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 926, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/components/game-components/modals/TrialCompletedDialog.tsx"],"sourcesContent":["const TrialCompleteDialog = ({\n  onStart,\n  onShowInstructions,\n  nextTrialNum,\n  isPractice,\n  totalTrials\n}: {\n  onStart: () => void;\n  onShowInstructions: () => void;\n  nextTrialNum: number;\n  isPractice: boolean;\n  totalTrials: number;\n}) => {\n  return (\n    <div className=\"bg-game-background absolute top-0 left-0 right-0 bottom-0 flex items-center justify-center\">\n      <div className=\"text-white border-white border rounded-xl w-1/2 h-1/2 flex flex-col items-center justify-center py-32\">\n        <h1 className=\"text-3xl lg:text-4xl text-white\">\n          {isPractice && \"Practice\"} Trial {nextTrialNum - 1} of {totalTrials}{\" \"}\n          completed\n        </h1>\n        <div className=\"text-center mb-8\">\n          <h2 className=\"text-gray-300\">\n            Next up: {isPractice && \"Practice\"} Trial {nextTrialNum}\n          </h2>\n        </div>\n        <div className=\"flex flex-col gap-5\">\n          <button onClick={onStart}>Start Next Trial</button>\n          <button onClick={onShowInstructions} className=\"bg-gray-700\">\n            Show Instructions\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TrialCompleteDialog;\n"],"names":[],"mappings":";;;;;AAAA,MAAM,sBAAsB,CAAC,EAC3B,OAAO,EACP,kBAAkB,EAClB,YAAY,EACZ,UAAU,EACV,WAAW,EAOZ;IACC,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;;wBACX,cAAc;wBAAW;wBAAQ,eAAe;wBAAE;wBAAK;wBAAa;wBAAI;;;;;;;8BAG3E,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAG,WAAU;;4BAAgB;4BAClB,cAAc;4BAAW;4BAAQ;;;;;;;;;;;;8BAG/C,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAO,SAAS;sCAAS;;;;;;sCAC1B,6LAAC;4BAAO,SAAS;4BAAoB,WAAU;sCAAc;;;;;;;;;;;;;;;;;;;;;;;AAOvE;KAlCM;uCAoCS"}},
    {"offset": {"line": 1018, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1024, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/components/game-components/modals/PracticeCompleteDialog.tsx"],"sourcesContent":["const PracticeCompleteDialog = ({\n  onStart,\n  onShowInstructions\n}: {\n  onStart: () => void;\n  onShowInstructions: () => void;\n}) => {\n  return (\n    <div className=\"bg-game-background absolute top-0 left-0 right-0 bottom-0 flex items-center justify-center\">\n      <div className=\"text-white border-white border-2 rounded-xl w-1/2 h-1/2 flex flex-col items-center justify-center py-32\">\n        <h2 className=\"text-5xl pb-10\">Practice Complete</h2>\n\n        <div className=\"flex flex-col gap-5\">\n          <button onClick={onStart} className=\"rounded-lg\">\n            Start Test\n          </button>\n          <button\n            onClick={onShowInstructions}\n            className=\"bg-gray-700 rounded-lg\"\n          >\n            Show Instructions\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PracticeCompleteDialog;\n"],"names":[],"mappings":";;;;;AAAA,MAAM,yBAAyB,CAAC,EAC9B,OAAO,EACP,kBAAkB,EAInB;IACC,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAAiB;;;;;;8BAE/B,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAO,SAAS;4BAAS,WAAU;sCAAa;;;;;;sCAGjD,6LAAC;4BACC,SAAS;4BACT,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAOX;KA1BM;uCA4BS"}},
    {"offset": {"line": 1089, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1095, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/components/game-components/modals/ThankyouDialog.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\n\nconst ThankYouDialog = ({ redirectLink = \"/\" }: { redirectLink?: string }) => {\n  const router = useRouter();\n\n  useEffect(() => {\n    if (redirectLink) {\n      const timer = setTimeout(() => {\n        router.push(redirectLink);\n      }, 3000);\n\n      return () => clearTimeout(timer); // Cleanup timer on unmount\n    } else {\n      console.error(\"Invalid redirect link:\", redirectLink);\n    }\n  }, [redirectLink, router]);\n\n  return (\n    <div className=\"bg-game-background absolute top-0 left-0 right-0 bottom-0 flex items-center justify-center\">\n      <div className=\"text-white border-white border-2 rounded-xl w-1/2 h-1/2 flex flex-col items-center justify-center py-32\">\n        <h2 className=\"text-5xl pb-10\">Thank You for playing!</h2>\n        <p className=\"text-xl pb-10\">Redirecting you now...</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ThankYouDialog;\n"],"names":[],"mappings":";;;;AAEA;AACA;;;AAHA;;;AAKA,MAAM,iBAAiB,CAAC,EAAE,eAAe,GAAG,EAA6B;;IACvE,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,IAAI,cAAc;gBAChB,MAAM,QAAQ;sDAAW;wBACvB,OAAO,IAAI,CAAC;oBACd;qDAAG;gBAEH;gDAAO,IAAM,aAAa;gDAAQ,2BAA2B;YAC/D,OAAO;gBACL,QAAQ,KAAK,CAAC,0BAA0B;YAC1C;QACF;mCAAG;QAAC;QAAc;KAAO;IAEzB,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAG,WAAU;8BAAiB;;;;;;8BAC/B,6LAAC;oBAAE,WAAU;8BAAgB;;;;;;;;;;;;;;;;;AAIrC;GAvBM;;QACW,qIAAA,CAAA,YAAS;;;KADpB;uCAyBS"}},
    {"offset": {"line": 1173, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1179, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/components/game-components/gameSequence.ts"],"sourcesContent":["const gameSequence = [\n  \"67543160ab5e87f35d19460f\",\n  \"6754316bab5e87f35d194610\",\n  \"67543176ab5e87f35d194611\"\n];\n\nexport default gameSequence;\n"],"names":[],"mappings":";;;AAAA,MAAM,eAAe;IACnB;IACA;IACA;CACD;uCAEc"}},
    {"offset": {"line": 1191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1197, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/lib/api/apiClient.ts"],"sourcesContent":["type ApiMethod = \"GET\" | \"POST\" | \"PUT\" | \"DELETE\";\n\ninterface ApiRequestOptions {\n  method?: ApiMethod;\n  body?: Record<string, unknown>;\n  headers?: Record<string, string>;\n}\n\nexport const apiClient = async <T>(\n  endpoint: string,\n  { method = \"GET\", body, headers }: ApiRequestOptions = {}\n): Promise<T> => {\n  const response = await fetch(endpoint, {\n    method,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...headers\n    },\n    body: body ? JSON.stringify(body) : undefined\n  });\n\n  const responseData = await response.json();\n  \n  if (!response.ok) {\n    throw new Error(`API request failed: ${JSON.stringify(responseData)}`);\n  }\n\n  return responseData;\n};"],"names":[],"mappings":";;;AAQO,MAAM,YAAY,OACvB,UACA,EAAE,SAAS,KAAK,EAAE,IAAI,EAAE,OAAO,EAAqB,GAAG,CAAC,CAAC;IAEzD,MAAM,WAAW,MAAM,MAAM,UAAU;QACrC;QACA,SAAS;YACP,gBAAgB;YAChB,GAAG,OAAO;QACZ;QACA,MAAM,OAAO,KAAK,SAAS,CAAC,QAAQ;IACtC;IAEA,MAAM,eAAe,MAAM,SAAS,IAAI;IAExC,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,KAAK,SAAS,CAAC,eAAe;IACvE;IAEA,OAAO;AACT"}},
    {"offset": {"line": 1218, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1224, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/components/game-components/utils/EventHandler.ts"],"sourcesContent":["type EventCallback<E extends Event> = (event: E) => void;\n\nclass EventHandler {\n  private target: EventTarget;\n  private listeners: Map<string, EventCallback<Event>[]>;\n\n  constructor(target: EventTarget) {\n    this.target = target;\n    this.listeners = new Map();\n  }\n\n  add<E extends Event>(eventType: string, callback: EventCallback<E>) {\n    const listener = callback as EventCallback<Event>; // Generic casting\n    if (!this.listeners.has(eventType)) {\n      this.listeners.set(eventType, []);\n    }\n    this.listeners.get(eventType)!.push(listener);\n    this.target.addEventListener(eventType, listener);\n  }\n\n  remove<E extends Event>(eventType: string, callback: EventCallback<E>) {\n    const listener = callback as EventCallback<Event>;\n    if (this.listeners.has(eventType)) {\n      const callbacks = this.listeners.get(eventType)!;\n      const index = callbacks.indexOf(listener);\n      if (index !== -1) {\n        callbacks.splice(index, 1);\n        this.target.removeEventListener(eventType, listener);\n      }\n    }\n  }\n\n  removeAll() {\n    this.listeners.forEach((callbacks, eventType) => {\n      callbacks.forEach((callback) => {\n        this.target.removeEventListener(eventType, callback);\n      });\n    });\n    this.listeners.clear();\n  }\n}\n\nexport default EventHandler;\n"],"names":[],"mappings":";;;AAEA,MAAM;IACI,OAAoB;IACpB,UAA+C;IAEvD,YAAY,MAAmB,CAAE;QAC/B,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,SAAS,GAAG,IAAI;IACvB;IAEA,IAAqB,SAAiB,EAAE,QAA0B,EAAE;QAClE,MAAM,WAAW,UAAkC,kBAAkB;QACrE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY;YAClC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,EAAE;QAClC;QACA,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAY,IAAI,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,WAAW;IAC1C;IAEA,OAAwB,SAAiB,EAAE,QAA0B,EAAE;QACrE,MAAM,WAAW;QACjB,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY;YACjC,MAAM,YAAY,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;YACrC,MAAM,QAAQ,UAAU,OAAO,CAAC;YAChC,IAAI,UAAU,CAAC,GAAG;gBAChB,UAAU,MAAM,CAAC,OAAO;gBACxB,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,WAAW;YAC7C;QACF;IACF;IAEA,YAAY;QACV,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,WAAW;YACjC,UAAU,OAAO,CAAC,CAAC;gBACjB,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,WAAW;YAC7C;QACF;QACA,IAAI,CAAC,SAAS,CAAC,KAAK;IACtB;AACF;uCAEe"}},
    {"offset": {"line": 1266, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1272, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/components/game-components/Game.tsx"],"sourcesContent":["\"use client\";\n\nimport { Component, createRef, MutableRefObject } from \"react\";\nimport InstructionDialog from \"./modals/InstructionDialog\";\nimport GameIntroDialog from \"./modals/GameIntroDialog\";\nimport { Countdown } from \"./utils\";\nimport TrialCompleteDialog from \"./modals/TrialCompletedDialog\";\nimport PracticeCompleteDialog from \"./modals/PracticeCompleteDialog\";\nimport ThankYouDialog from \"./modals/ThankyouDialog\";\nimport games from \"./gameSequence\";\nimport { apiClient } from \"@/lib/api/apiClient\";\nimport { GameObservationFields, GameType } from \"@/types\";\nimport EventHandler from \"./utils/EventHandler\";\n\nexport interface GameState {\n  trial: number;\n  showGameIntro: boolean;\n  showInstructions: boolean;\n  showCountdown: boolean;\n  isRunning: boolean;\n  isPractice: boolean;\n  showPracticeComplete: boolean;\n  showTrialComplete: boolean;\n  showReset: boolean;\n  showThankYou: boolean;\n}\n\nexport interface GameProps {\n  gameId: string;\n  gameInfo: GameType;\n}\n\nexport type GameSubmission<T> = GameObservationFields & {\n  data: T;\n};\n\nexport type BaseGameParams = {\n  duration: number;\n  trials: number;\n  practiceTrials: number;\n};\n\nclass Game<TData, TParams extends BaseGameParams> extends Component<\n  GameProps,\n  GameState\n> {\n  canvasRef = createRef<HTMLCanvasElement>();\n  ctxRef: MutableRefObject<CanvasRenderingContext2D | null> = { current: null };\n  animationFrameIdRef: MutableRefObject<number | null> = { current: 0 };\n  paramsRef: MutableRefObject<TParams | null> = { current: null };\n  renderGame() {}\n  gameId: string;\n  eventHandler: EventHandler | null = null;\n\n  timerIntervalRef: MutableRefObject<NodeJS.Timeout | null> = { current: null };\n  showTimer: number = -1;\n\n  gameEndTimeRef: MutableRefObject<number> = { current: 0 };\n  data: TData;\n  gameTimeout: ReturnType<typeof setTimeout> | null = null;\n\n  rapidTrials = false;\n  getHUD = (): JSX.Element => <div></div>;\n  animate = (timestamp: number) => {\n    void timestamp;\n  };\n\n  constructor(props: GameProps) {\n    super(props);\n    this.gameId = props.gameId;\n    this.state = {\n      trial: 1,\n      showGameIntro: true,\n      showInstructions: true,\n      showCountdown: false,\n      isRunning: false,\n      isPractice: true,\n      showPracticeComplete: false,\n      showTrialComplete: false,\n      showReset: false,\n      showThankYou: false\n    };\n    this.data = {} as TData;\n\n    this.paramsRef.current! = props.gameInfo.parameters[0].data;\n  }\n\n  skipPractice = () => {\n    this.stopTimer();\n    this.setState({\n      trial: 1,\n      showInstructions: false,\n      isPractice: false,\n      showCountdown: true,\n      showTrialComplete: false,\n      showPracticeComplete: false\n    });\n  };\n\n  onSubmit = async () => {\n    const playerId =\n      sessionStorage.getItem(\"playerId\") || \"6773dbc4add5c628e515c538\";\n    if (!playerId || !this.gameId || !this.data) {\n      return;\n    }\n    await apiClient(\"/api/game-observations\", {\n      method: \"POST\",\n      body: { data: this.data, gameId: this.gameId, playerId }\n    });\n  };\n\n  componentDidMount() {\n    this.ctxRef.current = this.canvasRef.current!.getContext(\"2d\")!;\n    this.canvasRef.current!.width = window.innerWidth;\n    this.canvasRef.current!.height = window.innerHeight;\n    this.canvasRef.current!.setAttribute(\"tabindex\", \"0\");\n    this.canvasRef.current!.focus();\n    this.eventHandler = new EventHandler(this.canvasRef.current!);\n  }\n\n  addEventListenersDuringGame = () => {};\n\n  addEventListenersAfterGame = () => {};\n\n  componentDidUpdate(prevProps: Readonly<GameProps>, prevState: GameState) {\n    void prevProps;\n    if (\n      this.canvasRef.current &&\n      !prevState.isRunning &&\n      this.state.isRunning\n    ) {\n      this.canvasRef.current?.focus();\n      this.renderGame();\n      this.eventHandler?.removeAll();\n      this.addEventListenersDuringGame();\n\n      this.gameTimeout = setTimeout(() => {\n        this.resetGame();\n\n        this.eventHandler?.removeAll();\n        this.addEventListenersAfterGame();\n\n        this.gameEndTimeRef.current = Date.now();\n      }, this.paramsRef.current!.duration * 1000);\n\n      this.startTimer(this.paramsRef.current!.duration);\n    }\n\n    if (prevState.trial !== this.state.trial) {\n      this.handleTrialCompletion();\n    }\n  }\n\n  startTimer(duration: number) {\n    this.showTimer = duration; // Initialize timer\n    if (this.timerIntervalRef.current) {\n      clearInterval(this.timerIntervalRef.current);\n    }\n    this.timerIntervalRef.current = setInterval(() => {\n      if (this.showTimer > 0) {\n        this.showTimer -= 1; // Decrement timer\n        this.forceUpdate();\n      } else {\n        if (this.timerIntervalRef.current) {\n          clearInterval(this.timerIntervalRef.current);\n        }\n      }\n    }, 1000);\n  }\n\n  stopTimer() {\n    if (this.gameTimeout) {\n      clearTimeout(this.gameTimeout);\n      this.gameTimeout = null;\n    }\n    if (this.timerIntervalRef.current) {\n      clearInterval(this.timerIntervalRef.current); // Cleanup interval\n      this.timerIntervalRef.current = null;\n    }\n  }\n\n  componentWillUnmount() {\n    this.stopTimer();\n    this.stopAnimationLoop();\n\n    // Cancel animation frame\n    if (this.animationFrameIdRef.current) {\n      cancelAnimationFrame(this.animationFrameIdRef.current);\n    }\n\n    // Remove all event listeners\n    this.eventHandler?.removeAll();\n  }\n\n  drawBackground() {\n    const ctx = this.ctxRef.current!;\n    const canvas = this.canvasRef.current!;\n    ctx.fillStyle = \"#1B1B1B\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n  }\n\n  handleTrialCompletion() {\n    if (this.paramsRef.current?.duration) {\n      this.showTimer = this.paramsRef.current.duration;\n    }\n    if (this.state.isPractice) {\n      if (this.state.trial === this.paramsRef.current!.practiceTrials + 1) {\n        this.setState({\n          trial: 1,\n          showPracticeComplete: true,\n          showReset: false,\n          isPractice: false\n        });\n      } else if (this.state.trial !== 1) {\n        this.setState({\n          showTrialComplete: !this.rapidTrials,\n          isRunning: this.rapidTrials,\n          showReset: false\n        });\n      }\n    } else if (this.state.trial !== 1) {\n      if (this.state.trial === this.paramsRef.current!.trials + 1) {\n        this.onSubmit();\n        this.setState({\n          showThankYou: true,\n          showReset: false,\n          showCountdown: false\n        });\n      } else {\n        this.setState({\n          showTrialComplete: !this.rapidTrials,\n          isRunning: this.rapidTrials,\n          showReset: false\n        });\n      }\n    }\n  }\n\n  resetGame() {\n    this.stopAnimationLoop();\n    this.setState({ isRunning: false });\n    this.stopTimer();\n    this.showTimer = 0;\n  }\n\n  getBaseHUD() {\n    return (\n      <div className=\"absolute top-10 right-10 text-white text-lg\">\n        {this.showTimer === 0 ? (\n          <div className=\"mb-4\">\n            <span>\n              {this.state.isPractice\n                ? `Practice Trial ${this.state.trial} of ${this.paramsRef.current!.practiceTrials}`\n                : `Trial ${this.state.trial} of ${this.paramsRef.current!.trials}`}{\" \"}\n            </span>\n          </div>\n        ) : (\n          \"\"\n        )}\n\n        <span className=\"mt-3\">{this.getHUD()}</span>\n      </div>\n    );\n  }\n\n  getNextgameId() {\n    const thisGameIndex = games.findIndex((gameId) => gameId === this.gameId);\n    if (thisGameIndex === -1 || thisGameIndex === games.length - 1) return \"/\";\n    return games[thisGameIndex + 1];\n  }\n\n  startAnimationLoop() {\n    if (!this.animationFrameIdRef.current) {\n      this.animationFrameIdRef.current = requestAnimationFrame(this.animate);\n    }\n  }\n\n  stopAnimationLoop() {\n    if (this.animationFrameIdRef.current) {\n      cancelAnimationFrame(this.animationFrameIdRef.current);\n      this.animationFrameIdRef.current = null;\n    }\n  }\n\n  render() {\n    const totalTrials: number = this.state.isPractice\n      ? (this.paramsRef.current!.practiceTrials as number)\n      : (this.paramsRef.current!.trials as number);\n    return (\n      <main className=\"w-screen h-screen overflow-hidden\">\n        <canvas\n          ref={this.canvasRef}\n          className=\"block outline-none\"\n          tabIndex={0}\n        />\n        {this.state.showCountdown && (\n          <Countdown\n            onCountdownEnd={() =>\n              this.setState({ showCountdown: false, isRunning: true })\n            }\n          />\n        )}\n        {this.state.showGameIntro && (\n          <GameIntroDialog\n            gameInfo={this.props.gameInfo}\n            onStart={() => this.setState({ \n              showCountdown: true, \n              showGameIntro: false \n            })}\n            onShowInstructions={() => this.setState({\n              showGameIntro: false,\n              showInstructions: true\n            })}\n            skipPractice={this.skipPractice}\n          />\n        )}\n        {this.state.showInstructions && (\n          <InstructionDialog\n            gameInfo={this.props.gameInfo}\n            onClose={() => this.setState({ showInstructions: false })}\n          />\n        )}\n        {this.state.showTrialComplete && (\n          <TrialCompleteDialog\n            onStart={() =>\n              this.setState({ showCountdown: true, showTrialComplete: false })\n            }\n            onShowInstructions={() =>\n              this.setState({\n                showInstructions: true,\n                showTrialComplete: false\n              })\n            }\n            nextTrialNum={this.state.trial}\n            isPractice={this.state.isPractice}\n            totalTrials={totalTrials}\n          />\n        )}\n        {this.state.showPracticeComplete && (\n          <PracticeCompleteDialog\n            onStart={() => {\n              this.setState({\n                showCountdown: true,\n                showPracticeComplete: false\n              });\n            }}\n            onShowInstructions={() =>\n              this.setState({\n                showInstructions: true,\n                showPracticeComplete: false\n              })\n            }\n          />\n        )}\n        {this.state.showThankYou && (\n          <ThankYouDialog redirectLink={this.getNextgameId()} />\n        )}\n        {this.getBaseHUD()}\n      </main>\n    );\n  }\n}\n\nexport default Game;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1648, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1654, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/components/game-components/games/Arrow.tsx"],"sourcesContent":["\"use client\";\n\nimport Game, { BaseGameParams, GameProps, GameState } from \"../Game\";\nimport { MutableRefObject } from \"react\";\n\ninterface ArrowGameState extends GameState {\n  primeTime: number;\n  reactionTime: number;\n}\n\nexport type ArrowGameData = {\n  scores: {\n    accuracy: boolean;\n    reactionTime: number;\n    primerDir: string;\n    topFlankerDir: string;\n    bottomFlankerDir: string;\n  }[];\n};\n\ntype ArrowGameParams = BaseGameParams & {};\n\nconst CORRECT_COLOR = \"#00FF00\"; // Green for correct\nconst INCORRECT_COLOR = \"#FF0000\"; // Red for incorrect\nconst STROKE_COLOR = \"#EEEEEE\"; // Normal gray colour\n\nclass ArrowGame extends Game<ArrowGameData, ArrowGameParams> {\n  answersRef: MutableRefObject<boolean[]> = { current: [] };\n  arrowDisplayTimeRef: MutableRefObject<number> = { current: 0 };\n  state: ArrowGameState = {\n    ...this.state,\n    primeTime: 33,\n    reactionTime: 0\n  };\n  correctDirection: \"left\" | \"right\" = \"right\";\n  rapidTrials = true; // This game is always rapid-fire\n  arrowShaftLength = 100;\n  arrowWingLength = 20;\n  lineWidth = 3;\n  plusSize = 50;\n  topFlankDirection: \"left\" | \"right\" = \"right\";\n  bottomFlankDirection: \"left\" | \"right\" = \"right\";\n  hasAnswered: boolean = false;\n\n  constructor(props: GameProps) {\n    super(props);\n    this.data = {\n      scores: []\n    };\n  }\n\n  drawRandomLines() {\n    const ctx = this.ctxRef.current!;\n    const canvas = this.canvasRef.current!;\n\n    ctx.strokeStyle = STROKE_COLOR;\n    ctx.lineWidth = 1;\n    ctx.globalAlpha = 1;\n    console.log(ctx.strokeStyle);\n\n    for (let i = 0; i < 100; i++) {\n      const x1 = Math.random() * canvas.width;\n      const y1 = Math.random() * canvas.height;\n      const x2 = Math.random() * canvas.width;\n      const y2 = Math.random() * canvas.height;\n\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n    }\n  }\n\n  drawArrow(\n    x: number,\n    y: number,\n    direction: \"left\" | \"right\",\n    color = STROKE_COLOR\n  ) {\n    const ctx = this.ctxRef.current!;\n    ctx.fillStyle = color;\n    ctx.strokeStyle = color;\n    ctx.lineWidth = this.lineWidth;\n\n    ctx.beginPath();\n\n    const offsetDir = direction === \"right\" ? -1 : 1;\n\n    const startX = x + (offsetDir * this.arrowShaftLength) / 2;\n    const endX = x - (offsetDir * this.arrowShaftLength) / 2;\n\n    ctx.moveTo(startX, y);\n    ctx.lineTo(endX, y);\n\n    const wingAngle = Math.PI / 6;\n    const wingX = Math.cos(wingAngle) * this.arrowWingLength;\n    const wingY = Math.sin(wingAngle) * this.arrowWingLength;\n\n    ctx.moveTo(endX, y);\n    ctx.lineTo(endX + offsetDir * wingX, y - wingY);\n    ctx.moveTo(endX, y);\n    ctx.lineTo(endX + offsetDir * wingX, y + wingY);\n    ctx.stroke();\n    ctx.closePath();\n    ctx.fillStyle = STROKE_COLOR;\n    ctx.strokeStyle = STROKE_COLOR;\n  }\n\n  drawPrime = this.drawArrow;\n\n  addEventListenersAfterGame = () => {\n    this.eventHandler!.add(\"click\", this.handleMouseClick);\n    this.eventHandler!.add(\"keydown\", this.handleKeyPress);\n    this.eventHandler!.add(\"touchstart\", this.handleTouchStart);\n  };\n\n  handleMouseClick = (event: MouseEvent) => {\n    if (this.hasAnswered) return;\n    this.hasAnswered = true;\n    const canvas = this.canvasRef.current!;\n    const rect = canvas.getBoundingClientRect();\n    const clickX = event.clientX - rect.left;\n    const canvasMid = canvas.width / 2;\n\n    const reactionTime = Date.now() - this.arrowDisplayTimeRef.current;\n    const clickedDirection = clickX < canvasMid ? \"left\" : \"right\";\n    this.checkAnswer(clickedDirection, reactionTime);\n  };\n\n  handleKeyPress = (event: KeyboardEvent) => {\n    if (this.hasAnswered) return;\n    const validKeys = [\"ArrowLeft\", \"ArrowRight\", \"p\", \"q\"];\n    if (!validKeys.includes(event.key)) return;\n\n    this.hasAnswered = true;\n    const reactionTime = Date.now() - this.arrowDisplayTimeRef.current;\n    let clickedDirection: \"left\" | \"right\";\n\n    if (event.key === \"ArrowLeft\" || event.key === \"q\") {\n      clickedDirection = \"left\";\n    } else if (event.key === \"ArrowRight\" || event.key === \"p\") {\n      clickedDirection = \"right\";\n    } else {\n      return; // Ignore other keys\n    }\n\n    this.checkAnswer(clickedDirection, reactionTime);\n  };\n\n  handleTouchStart = (event: TouchEvent) => {\n    if (this.hasAnswered) return;\n    this.hasAnswered = true;\n\n    const canvas = this.canvasRef.current!;\n    const rect = canvas.getBoundingClientRect();\n    const touchX = event.touches[0].clientX - rect.left;\n    const canvasMid = canvas.width / 2;\n\n    const reactionTime = Date.now() - this.arrowDisplayTimeRef.current;\n    const clickedDirection = touchX < canvasMid ? \"left\" : \"right\";\n    this.checkAnswer(clickedDirection, reactionTime);\n  };\n\n  checkAnswer = (clickedDirection: string, reactionTime: number) => {\n    const isCorrect = clickedDirection === this.correctDirection;\n\n    this.data.scores.push({\n      accuracy: isCorrect,\n      reactionTime: reactionTime,\n      primerDir: this.correctDirection,\n      topFlankerDir: this.topFlankDirection,\n      bottomFlankerDir: this.bottomFlankDirection\n    });\n    this.updateAnswer(isCorrect);\n  };\n\n  updateAnswer = (isCorrect: boolean) => {\n    const canvas = this.canvasRef.current!;\n    this.drawBackground();\n    const midX = canvas.width / 2;\n    const midY = canvas.height / 2;\n    this.drawPrime(\n      midX,\n      midY,\n      this.correctDirection,\n      isCorrect ? CORRECT_COLOR : INCORRECT_COLOR\n    );\n\n    this.answersRef.current.push(isCorrect);\n\n    setTimeout(() => {\n      this.hasAnswered = false;\n      this.setState({ trial: this.state.trial + 1 });\n    }, 1000);\n  };\n\n  drawPlus() {\n    const canvas = this.canvasRef.current!;\n    const ctx = this.ctxRef.current!;\n    const midX = canvas.width / 2;\n    const midY = canvas.height / 2;\n\n    // Set the fill color for the plus sign\n    ctx.fillStyle = STROKE_COLOR;\n\n    // Calculate the dimensions of the horizontal and vertical bars\n    const barThickness = this.plusSize / 10; // Thickness of the bars\n    const halfSize = this.plusSize / 2;\n\n    // Adjust Y-coordinate for proper centering\n    const verticalBarTop = midY - halfSize;\n    const horizontalBarTop = midY - barThickness / 2;\n\n    // Draw the vertical bar\n    ctx.fillRect(\n      midX - barThickness / 2,\n      verticalBarTop,\n      barThickness,\n      this.plusSize\n    );\n\n    // Draw the horizontal bar\n    ctx.fillRect(\n      midX - halfSize,\n      horizontalBarTop,\n      this.plusSize,\n      barThickness\n    );\n  }\n\n  renderGame() {\n    const canvas = this.canvasRef.current!;\n    const midX = canvas.width / 2;\n    const midY = canvas.height / 2;\n\n    this.correctDirection = Math.random() < 0.5 ? \"left\" : \"right\";\n    this.topFlankDirection = Math.random() < 0.5 ? \"left\" : \"right\";\n    this.bottomFlankDirection = Math.random() < 0.5 ? \"left\" : \"right\";\n\n    // Display sequence\n    this.drawBackground();\n\n    // Draw the centered plus sign\n    this.drawPlus();\n\n    setTimeout(() => {\n      this.drawBackground();\n      this.drawRandomLines();\n\n      setTimeout(() => {\n        this.drawBackground();\n        // Draw the prime arrow in the center\n        this.drawPrime(midX, midY, this.correctDirection);\n\n        // Add offsets for flanking arrows\n        const flankOffset = this.arrowShaftLength + 20; // Space between arrows\n        this.drawPrime(midX, midY - flankOffset, this.topFlankDirection);\n        this.drawPrime(midX, midY + flankOffset, this.bottomFlankDirection);\n\n        this.arrowDisplayTimeRef.current = Date.now();\n        this.addEventListenersAfterGame();\n\n        if (!this.hasAnswered) {\n          setTimeout(() => {\n            if (!this.hasAnswered) {\n              this.drawBackground();\n              this.drawRandomLines();\n\n              setTimeout(() => {\n                if (!this.hasAnswered) {\n                  this.drawBackground();\n                  this.drawPrime(\n                    midX,\n                    midY - (2 * this.arrowWingLength + 10),\n                    this.topFlankDirection\n                  );\n                  this.drawPrime(midX, midY, this.correctDirection);\n                  this.drawPrime(\n                    midX,\n                    midY + (2 * this.arrowWingLength + 10),\n                    this.bottomFlankDirection\n                  );\n                }\n              }, 33);\n            }\n          }, this.state.primeTime);\n        }\n      }, 200);\n    }, 750);\n  }\n}\n\nexport default ArrowGame;\n"],"names":[],"mappings":";;;AAEA;AAFA;;AAsBA,MAAM,gBAAgB,WAAW,oBAAoB;AACrD,MAAM,kBAAkB,WAAW,oBAAoB;AACvD,MAAM,eAAe,WAAW,qBAAqB;AAErD,MAAM,kBAAkB,mJAAA,CAAA,UAAI;IAC1B,aAA0C;QAAE,SAAS,EAAE;IAAC,EAAE;IAC1D,sBAAgD;QAAE,SAAS;IAAE,EAAE;IAC/D,QAAwB;QACtB,GAAG,IAAI,CAAC,KAAK;QACb,WAAW;QACX,cAAc;IAChB,EAAE;IACF,mBAAqC,QAAQ;IAC7C,cAAc,KAAK;IACnB,mBAAmB,IAAI;IACvB,kBAAkB,GAAG;IACrB,YAAY,EAAE;IACd,WAAW,GAAG;IACd,oBAAsC,QAAQ;IAC9C,uBAAyC,QAAQ;IACjD,cAAuB,MAAM;IAE7B,YAAY,KAAgB,CAAE;QAC5B,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;YACV,QAAQ,EAAE;QACZ;IACF;IAEA,kBAAkB;QAChB,MAAM,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO;QAC/B,MAAM,SAAS,IAAI,CAAC,SAAS,CAAC,OAAO;QAErC,IAAI,WAAW,GAAG;QAClB,IAAI,SAAS,GAAG;QAChB,IAAI,WAAW,GAAG;QAClB,QAAQ,GAAG,CAAC,IAAI,WAAW;QAE3B,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IAAK;YAC5B,MAAM,KAAK,KAAK,MAAM,KAAK,OAAO,KAAK;YACvC,MAAM,KAAK,KAAK,MAAM,KAAK,OAAO,MAAM;YACxC,MAAM,KAAK,KAAK,MAAM,KAAK,OAAO,KAAK;YACvC,MAAM,KAAK,KAAK,MAAM,KAAK,OAAO,MAAM;YAExC,IAAI,SAAS;YACb,IAAI,MAAM,CAAC,IAAI;YACf,IAAI,MAAM,CAAC,IAAI;YACf,IAAI,MAAM;QACZ;IACF;IAEA,UACE,CAAS,EACT,CAAS,EACT,SAA2B,EAC3B,QAAQ,YAAY,EACpB;QACA,MAAM,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO;QAC/B,IAAI,SAAS,GAAG;QAChB,IAAI,WAAW,GAAG;QAClB,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS;QAE9B,IAAI,SAAS;QAEb,MAAM,YAAY,cAAc,UAAU,CAAC,IAAI;QAE/C,MAAM,SAAS,IAAI,AAAC,YAAY,IAAI,CAAC,gBAAgB,GAAI;QACzD,MAAM,OAAO,IAAI,AAAC,YAAY,IAAI,CAAC,gBAAgB,GAAI;QAEvD,IAAI,MAAM,CAAC,QAAQ;QACnB,IAAI,MAAM,CAAC,MAAM;QAEjB,MAAM,YAAY,KAAK,EAAE,GAAG;QAC5B,MAAM,QAAQ,KAAK,GAAG,CAAC,aAAa,IAAI,CAAC,eAAe;QACxD,MAAM,QAAQ,KAAK,GAAG,CAAC,aAAa,IAAI,CAAC,eAAe;QAExD,IAAI,MAAM,CAAC,MAAM;QACjB,IAAI,MAAM,CAAC,OAAO,YAAY,OAAO,IAAI;QACzC,IAAI,MAAM,CAAC,MAAM;QACjB,IAAI,MAAM,CAAC,OAAO,YAAY,OAAO,IAAI;QACzC,IAAI,MAAM;QACV,IAAI,SAAS;QACb,IAAI,SAAS,GAAG;QAChB,IAAI,WAAW,GAAG;IACpB;IAEA,YAAY,IAAI,CAAC,SAAS,CAAC;IAE3B,6BAA6B;QAC3B,IAAI,CAAC,YAAY,CAAE,GAAG,CAAC,SAAS,IAAI,CAAC,gBAAgB;QACrD,IAAI,CAAC,YAAY,CAAE,GAAG,CAAC,WAAW,IAAI,CAAC,cAAc;QACrD,IAAI,CAAC,YAAY,CAAE,GAAG,CAAC,cAAc,IAAI,CAAC,gBAAgB;IAC5D,EAAE;IAEF,mBAAmB,CAAC;QAClB,IAAI,IAAI,CAAC,WAAW,EAAE;QACtB,IAAI,CAAC,WAAW,GAAG;QACnB,MAAM,SAAS,IAAI,CAAC,SAAS,CAAC,OAAO;QACrC,MAAM,OAAO,OAAO,qBAAqB;QACzC,MAAM,SAAS,MAAM,OAAO,GAAG,KAAK,IAAI;QACxC,MAAM,YAAY,OAAO,KAAK,GAAG;QAEjC,MAAM,eAAe,KAAK,GAAG,KAAK,IAAI,CAAC,mBAAmB,CAAC,OAAO;QAClE,MAAM,mBAAmB,SAAS,YAAY,SAAS;QACvD,IAAI,CAAC,WAAW,CAAC,kBAAkB;IACrC,EAAE;IAEF,iBAAiB,CAAC;QAChB,IAAI,IAAI,CAAC,WAAW,EAAE;QACtB,MAAM,YAAY;YAAC;YAAa;YAAc;YAAK;SAAI;QACvD,IAAI,CAAC,UAAU,QAAQ,CAAC,MAAM,GAAG,GAAG;QAEpC,IAAI,CAAC,WAAW,GAAG;QACnB,MAAM,eAAe,KAAK,GAAG,KAAK,IAAI,CAAC,mBAAmB,CAAC,OAAO;QAClE,IAAI;QAEJ,IAAI,MAAM,GAAG,KAAK,eAAe,MAAM,GAAG,KAAK,KAAK;YAClD,mBAAmB;QACrB,OAAO,IAAI,MAAM,GAAG,KAAK,gBAAgB,MAAM,GAAG,KAAK,KAAK;YAC1D,mBAAmB;QACrB,OAAO;YACL,QAAQ,oBAAoB;QAC9B;QAEA,IAAI,CAAC,WAAW,CAAC,kBAAkB;IACrC,EAAE;IAEF,mBAAmB,CAAC;QAClB,IAAI,IAAI,CAAC,WAAW,EAAE;QACtB,IAAI,CAAC,WAAW,GAAG;QAEnB,MAAM,SAAS,IAAI,CAAC,SAAS,CAAC,OAAO;QACrC,MAAM,OAAO,OAAO,qBAAqB;QACzC,MAAM,SAAS,MAAM,OAAO,CAAC,EAAE,CAAC,OAAO,GAAG,KAAK,IAAI;QACnD,MAAM,YAAY,OAAO,KAAK,GAAG;QAEjC,MAAM,eAAe,KAAK,GAAG,KAAK,IAAI,CAAC,mBAAmB,CAAC,OAAO;QAClE,MAAM,mBAAmB,SAAS,YAAY,SAAS;QACvD,IAAI,CAAC,WAAW,CAAC,kBAAkB;IACrC,EAAE;IAEF,cAAc,CAAC,kBAA0B;QACvC,MAAM,YAAY,qBAAqB,IAAI,CAAC,gBAAgB;QAE5D,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YACpB,UAAU;YACV,cAAc;YACd,WAAW,IAAI,CAAC,gBAAgB;YAChC,eAAe,IAAI,CAAC,iBAAiB;YACrC,kBAAkB,IAAI,CAAC,oBAAoB;QAC7C;QACA,IAAI,CAAC,YAAY,CAAC;IACpB,EAAE;IAEF,eAAe,CAAC;QACd,MAAM,SAAS,IAAI,CAAC,SAAS,CAAC,OAAO;QACrC,IAAI,CAAC,cAAc;QACnB,MAAM,OAAO,OAAO,KAAK,GAAG;QAC5B,MAAM,OAAO,OAAO,MAAM,GAAG;QAC7B,IAAI,CAAC,SAAS,CACZ,MACA,MACA,IAAI,CAAC,gBAAgB,EACrB,YAAY,gBAAgB;QAG9B,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC;QAE7B,WAAW;YACT,IAAI,CAAC,WAAW,GAAG;YACnB,IAAI,CAAC,QAAQ,CAAC;gBAAE,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG;YAAE;QAC9C,GAAG;IACL,EAAE;IAEF,WAAW;QACT,MAAM,SAAS,IAAI,CAAC,SAAS,CAAC,OAAO;QACrC,MAAM,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO;QAC/B,MAAM,OAAO,OAAO,KAAK,GAAG;QAC5B,MAAM,OAAO,OAAO,MAAM,GAAG;QAE7B,uCAAuC;QACvC,IAAI,SAAS,GAAG;QAEhB,+DAA+D;QAC/D,MAAM,eAAe,IAAI,CAAC,QAAQ,GAAG,IAAI,wBAAwB;QACjE,MAAM,WAAW,IAAI,CAAC,QAAQ,GAAG;QAEjC,2CAA2C;QAC3C,MAAM,iBAAiB,OAAO;QAC9B,MAAM,mBAAmB,OAAO,eAAe;QAE/C,wBAAwB;QACxB,IAAI,QAAQ,CACV,OAAO,eAAe,GACtB,gBACA,cACA,IAAI,CAAC,QAAQ;QAGf,0BAA0B;QAC1B,IAAI,QAAQ,CACV,OAAO,UACP,kBACA,IAAI,CAAC,QAAQ,EACb;IAEJ;IAEA,aAAa;QACX,MAAM,SAAS,IAAI,CAAC,SAAS,CAAC,OAAO;QACrC,MAAM,OAAO,OAAO,KAAK,GAAG;QAC5B,MAAM,OAAO,OAAO,MAAM,GAAG;QAE7B,IAAI,CAAC,gBAAgB,GAAG,KAAK,MAAM,KAAK,MAAM,SAAS;QACvD,IAAI,CAAC,iBAAiB,GAAG,KAAK,MAAM,KAAK,MAAM,SAAS;QACxD,IAAI,CAAC,oBAAoB,GAAG,KAAK,MAAM,KAAK,MAAM,SAAS;QAE3D,mBAAmB;QACnB,IAAI,CAAC,cAAc;QAEnB,8BAA8B;QAC9B,IAAI,CAAC,QAAQ;QAEb,WAAW;YACT,IAAI,CAAC,cAAc;YACnB,IAAI,CAAC,eAAe;YAEpB,WAAW;gBACT,IAAI,CAAC,cAAc;gBACnB,qCAAqC;gBACrC,IAAI,CAAC,SAAS,CAAC,MAAM,MAAM,IAAI,CAAC,gBAAgB;gBAEhD,kCAAkC;gBAClC,MAAM,cAAc,IAAI,CAAC,gBAAgB,GAAG,IAAI,uBAAuB;gBACvE,IAAI,CAAC,SAAS,CAAC,MAAM,OAAO,aAAa,IAAI,CAAC,iBAAiB;gBAC/D,IAAI,CAAC,SAAS,CAAC,MAAM,OAAO,aAAa,IAAI,CAAC,oBAAoB;gBAElE,IAAI,CAAC,mBAAmB,CAAC,OAAO,GAAG,KAAK,GAAG;gBAC3C,IAAI,CAAC,0BAA0B;gBAE/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;oBACrB,WAAW;wBACT,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;4BACrB,IAAI,CAAC,cAAc;4BACnB,IAAI,CAAC,eAAe;4BAEpB,WAAW;gCACT,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;oCACrB,IAAI,CAAC,cAAc;oCACnB,IAAI,CAAC,SAAS,CACZ,MACA,OAAO,CAAC,IAAI,IAAI,CAAC,eAAe,GAAG,EAAE,GACrC,IAAI,CAAC,iBAAiB;oCAExB,IAAI,CAAC,SAAS,CAAC,MAAM,MAAM,IAAI,CAAC,gBAAgB;oCAChD,IAAI,CAAC,SAAS,CACZ,MACA,OAAO,CAAC,IAAI,IAAI,CAAC,eAAe,GAAG,EAAE,GACrC,IAAI,CAAC,oBAAoB;gCAE7B;4BACF,GAAG;wBACL;oBACF,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS;gBACzB;YACF,GAAG;QACL,GAAG;IACL;AACF;uCAEe"}},
    {"offset": {"line": 1871, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1877, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/components/game-components/games/Grid.tsx"],"sourcesContent":["\"use client\";\n\nimport Game, { BaseGameParams, GameProps, GameState } from \"../Game\";\nimport { MutableRefObject } from \"react\";\nimport {\n  Point,\n  Line,\n  detectPolygons,\n  highlightAndFadePolygon,\n  Polygon\n} from \"../utils\";\n\nconst HIGHLIGHT_COLOR = \"#FFFF00\";\nconst FADED_COLOR = \"rgba(255, 255, 255, 0.2)\";\n\ninterface GridGameState extends GameState {\n  completedPolygons: Record<number, Polygon>;\n  duplicatePolygons: Record<number, Polygon>;\n}\n\ntype PointType = {\n  x: number;\n  y: number;\n};\n\ntype TrialData = {\n  polygons: Record<number, Polygon>;\n  duplicatePolygons: Record<number, Polygon>;\n  yellowPoints: Point[];\n};\n\nexport type GridGameData = TrialData[];\n\ntype GridGameParams = BaseGameParams & {};\n\nclass GridGame extends Game<GridGameData, GridGameParams> {\n  // Grid\n  gridSizeRef: MutableRefObject<number> = { current: 5 };\n  gridTotalSizeRef: MutableRefObject<number> = { current: 600 };\n\n  // Points\n  pointsRef: MutableRefObject<Point[][]> = { current: [] };\n  yellowPointsRef: MutableRefObject<Point[]> = { current: [] };\n  hoveredPointRef: MutableRefObject<Point | null> = { current: null };\n  showYellowRef: MutableRefObject<boolean> = { current: false };\n  interactivityRadius = 30;\n\n  // Lines\n  currentLineRef: MutableRefObject<Line | null> = {\n    current: null\n  };\n  linesRef: MutableRefObject<Line[]> = { current: [] };\n\n  state: GridGameState = {\n    ...this.state,\n    completedPolygons: {},\n    duplicatePolygons: {}\n  };\n\n  constructor(props: GameProps) {\n    super(props);\n    this.data = [];\n  }\n\n  addEventListenersDuringGame = () => {\n    this.eventHandler!.add(\"mousedown\", this.handleInteractionStart);\n    this.eventHandler!.add(\"mousemove\", this.handleIntearctionMove);\n    this.eventHandler!.add(\"mouseup\", this.handleInteractionEnd);\n\n    this.eventHandler!.add(\"touchstart\", this.handleInteractionStart);\n    this.eventHandler!.add(\"touchmove\", this.handleIntearctionMove);\n    this.eventHandler!.add(\"touchend\", this.handleInteractionEnd);\n  };\n\n  calculateDistance(p1: PointType, p2: PointType): number {\n    const distance = Math.sqrt((p1.x - p2.x) ** 2 + (p1.y - p2.y) ** 2);\n    return distance;\n  }\n\n  initializePoints() {\n    const gridSize = this.gridSizeRef.current;\n    const gridTotalSize = this.gridTotalSizeRef.current;\n\n    const canvas = this.canvasRef.current;\n    if (!canvas) return;\n\n    const cellSize = gridTotalSize / (gridSize - 1);\n    const startX = (canvas.width - gridTotalSize) / 2;\n    const startY = (canvas.height - gridTotalSize) / 2;\n\n    const points: Point[][] = [];\n\n    for (let row = 0; row < gridSize; row++) {\n      const rowPoints: Point[] = [];\n      for (let col = 0; col < gridSize; col++) {\n        const x = startX + col * cellSize;\n        const y = startY + row * cellSize;\n        rowPoints.push(new Point(row, col, x, y));\n      }\n      points.push(rowPoints);\n    }\n\n    this.pointsRef.current = points;\n  }\n\n  drawLine(start: Point, end: Point) {\n    const ctx = this.ctxRef.current!;\n\n    if (start && end) {\n      ctx.strokeStyle = HIGHLIGHT_COLOR;\n      ctx.lineWidth = 2;\n      ctx.beginPath();\n      ctx.moveTo(start.x, start.y);\n      ctx.lineTo(end.x, end.y);\n      ctx.stroke();\n    }\n  }\n\n  drawLines() {\n    this.linesRef.current.forEach((line) => line.draw(this.ctxRef.current!));\n\n    if (this.currentLineRef.current) {\n      this.currentLineRef.current.draw(this.ctxRef.current!);\n    }\n  }\n\n  drawGrid() {\n    const ctx = this.ctxRef.current!;\n    const points = this.pointsRef.current!;\n    const showYellow = this.showYellowRef.current;\n\n    points\n      .flat()\n      .forEach((point) =>\n        point.draw(ctx, showYellow, HIGHLIGHT_COLOR, FADED_COLOR)\n      );\n  }\n\n  generateYellowPoints() {\n    const gridSize = this.gridSizeRef.current!;\n    const yellowPoints: Point[] = [];\n\n    // Helper function to check if three points are collinear\n    const areCollinear = (p1: Point, p2: Point, p3: Point): boolean => {\n      // Use the area of the triangle formed by the three points\n      // If the area is 0, they are collinear\n      return (\n        p1.x * (p2.y - p3.y) + p2.x * (p3.y - p1.y) + p3.x * (p1.y - p2.y) === 0\n      );\n    };\n\n    // Check if adding a new point violates the collinearity constraint\n    const isValidPoint = (newPoint: Point) => {\n      for (let i = 0; i < yellowPoints.length; i++) {\n        for (let j = i + 1; j < yellowPoints.length; j++) {\n          if (areCollinear(yellowPoints[i], yellowPoints[j], newPoint)) {\n            return false; // Found three collinear points\n          }\n        }\n      }\n      return true; // No collinearity issues\n    };\n\n    while (yellowPoints.length < 5) {\n      const row = Math.floor(Math.random() * gridSize);\n      const col = Math.floor(Math.random() * gridSize);\n\n      const point = this.pointsRef.current![row][col];\n\n      if (!point.isYellow && isValidPoint(point)) {\n        point.setYellow(true);\n        yellowPoints.push(point);\n      }\n    }\n\n    this.yellowPointsRef.current = yellowPoints;\n    this.gameEndTimeRef.current = Date.now();\n  }\n\n  getHUD = () => {\n    return this.state.isRunning ? (\n      <div className=\"flex flex-col\">\n        <span>\n          Completed Polygons:{\" \"}\n          {Object.values(this.state.completedPolygons).length}\n        </span>\n        <span>\n          <button onClick={this.resetLines} className=\"text-xl w-full mt-3\">\n            Reset Lines\n          </button>\n        </span>\n      </div>\n    ) : (\n      <div></div>\n    );\n  };\n\n  resetLines = () => {\n    this.linesRef.current = [];\n    this.currentLineRef.current = null;\n  };\n\n  animate = () => {\n    if (!this.canvasRef.current) return;\n    this.drawBackground();\n    this.drawGrid();\n    this.drawLines();\n\n    this.animationFrameIdRef.current = requestAnimationFrame(this.animate);\n  };\n\n  getInteractionPos = (event: MouseEvent | TouchEvent) => {\n    const rect = this.canvasRef.current!.getBoundingClientRect();\n    if (event instanceof MouseEvent) {\n      return {\n        x: event.clientX - rect.left,\n        y: event.clientY - rect.top\n      };\n    } else {\n      const touch = event.touches[0];\n      return {\n        x: touch.clientX - rect.left,\n        y: touch.clientY - rect.top\n      };\n    }\n  };\n\n  handleInteractionStart = (event: MouseEvent | TouchEvent) => {\n    const { x, y } = this.getInteractionPos(event);\n\n    this.yellowPointsRef.current.forEach((point) => {\n      const distance = this.calculateDistance({ x, y }, point);\n      if (distance <= this.interactivityRadius) {\n        this.currentLineRef.current = new Line(point, point);\n      }\n    });\n  };\n\n  handleIntearctionMove = (event: MouseEvent) => {\n    const { x, y } = this.getInteractionPos(event);\n    if (this.currentLineRef.current) {\n      this.currentLineRef.current!.end = { x, y } as Point;\n    }\n\n    // Hover detection\n    this.pointsRef.current.flat().forEach((point) => {\n      const distance = this.calculateDistance({ x, y }, point);\n      point.setHovered(distance <= this.interactivityRadius && point.isYellow);\n    });\n\n    const start = this.currentLineRef.current?.start;\n\n    if (start) {\n      // Draw a temporary line\n      this.drawBackground();\n      this.drawGrid();\n\n      // Check for proximity to yellow points\n      this.yellowPointsRef.current.forEach((point) => {\n        const distance = this.calculateDistance({ x, y }, point);\n        if (distance <= this.interactivityRadius) {\n          if (this.currentLineRef.current!.start == point) {\n            return;\n          }\n          const newLine = new Line(start, point);\n\n          // Avoid duplicate lines\n          if (!this.linesRef.current.some((line) => line.isEquals(newLine))) {\n            this.linesRef.current.push(newLine); // Add the new line\n            this.currentLineRef.current!.start = point; // Update the starting point\n\n            // Polygon detection after a valid line\n            detectPolygons(\n              this.linesRef.current,\n              Object.values(this.state.completedPolygons),\n              this.newPolygonDetected,\n              this.duplicatePolygonDetected,\n              this.nonCyclicPolygonDetected\n            );\n          }\n        }\n      });\n    }\n\n    // Final redraw\n    this.drawBackground();\n    this.drawGrid();\n    this.drawLines();\n  };\n\n  newPolygonDetected = (newPolygon: Polygon) => {\n    const updatedPolygons = this.state.completedPolygons;\n    updatedPolygons[Date.now() - this.gameEndTimeRef.current] = newPolygon;\n    this.setState({\n      completedPolygons: updatedPolygons\n    } as GridGameState);\n\n    // Highlight and fade the polygon\n    highlightAndFadePolygon(newPolygon, this.linesRef.current);\n    setTimeout(() => {\n      this.linesRef.current = [];\n    }, 100);\n  };\n\n  duplicatePolygonDetected = (polygon: Polygon) => {\n    const duplicatePolygons = this.state.duplicatePolygons;\n    duplicatePolygons[Date.now() - this.gameEndTimeRef.current] = polygon;\n    this.setState({\n      duplicatePolygons: duplicatePolygons\n    } as GridGameState);\n\n    // Highlight duplicate polygons in red\n    highlightAndFadePolygon(polygon, this.linesRef.current, \"#FF0000\");\n\n    setTimeout(() => {\n      this.linesRef.current = [];\n    }, 100);\n  };\n\n  nonCyclicPolygonDetected = (polygon: Polygon) => {\n    this.duplicatePolygonDetected(polygon);\n  };\n\n  handleInteractionEnd = () => {\n    this.currentLineRef.current = null; // Clear the starting point\n  };\n\n  resetGame() {\n    this.currentLineRef.current = null;\n    this.linesRef.current = [];\n\n    const polygonsData: Record<number, Polygon> = Object.entries(\n      this.state.completedPolygons\n    ).reduce(\n      (acc, [key, val]) => {\n        acc[Number(key)] = {\n          points: val.points.map(\n            (point) =>\n              ({\n                row: point.row,\n                col: point.col\n              }) as Point\n          )\n        } as Polygon;\n        return acc;\n      },\n      {} as Record<number, Polygon>\n    );\n\n    const duplicatePolygonsData: Record<number, Polygon> = Object.entries(\n      this.state.duplicatePolygons\n    ).reduce(\n      (acc, [key, val]) => {\n        acc[Number(key)] = {\n          points: val.points.map(\n            (point) =>\n              ({\n                row: point.row,\n                col: point.col\n              }) as Point\n          )\n        } as Polygon;\n        return acc;\n      },\n      {} as Record<number, Polygon>\n    );\n\n    this.data = [\n      ...this.data,\n      {\n        polygons: polygonsData,\n        duplicatePolygons: duplicatePolygonsData,\n        yellowPoints: this.yellowPointsRef.current.map(\n          (yellowPoint) =>\n            ({\n              row: yellowPoint.row,\n              col: yellowPoint.col\n            }) as Point\n        )\n      }\n    ];\n\n    super.resetGame();\n    this.setState({\n      completedPolygons: {},\n      duplicatePolygons: {},\n      trial: this.state.trial + 1\n    } as GridGameState);\n  }\n\n  renderGame() {\n    this.drawBackground();\n    this.initializePoints();\n    this.drawGrid();\n\n    setTimeout(() => {\n      this.generateYellowPoints();\n      this.showYellowRef.current = true;\n      this.drawBackground();\n      this.drawGrid();\n    }, 1000);\n\n    // Start the animation loop\n    this.startAnimationLoop();\n  }\n}\n\nexport default GridGame;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2230, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2236, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/components/game-components/games/TNT.tsx"],"sourcesContent":["\"use client\";\n\nimport Game, { BaseGameParams, GameProps, GameState } from \"../Game\";\nimport {\n  Ball,\n  createBalls,\n  resolveCollisions,\n  resolveCollisionsWithWalls\n} from \"../utils\";\nimport { MutableRefObject } from \"react\";\n\ninterface TNTGameState extends GameState {\n  vts: number;\n}\n\nexport type BaseTNTGameData = {\n  scores: number[];\n  reactionTimes: {\n    clickTimes: number[];\n  }[];\n};\n\nexport type BaseTNTParams = BaseGameParams & {\n  numOfBalls: number;\n  duration: number;\n  startingVts: number;\n  changeInVts: number;\n};\n\nclass TNT<\n  TNTParams extends BaseTNTParams,\n  TNTData extends BaseTNTGameData,\n  BallType extends Ball\n> extends Game<TNTData, TNTParams> {\n  ballsRef: MutableRefObject<BallType[]> = { current: [] };\n  ballSizeRef: MutableRefObject<number> = { current: 50 };\n  state: TNTGameState = {\n    ...this.state,\n    vts: 0\n  };\n\n  wrongBallsRef: MutableRefObject<number[]> = { current: [] };\n  correctBallsRef: MutableRefObject<number[]> = { current: [] };\n  highlightedBallsRef: MutableRefObject<number[]> = { current: [] };\n  actualBallsRef: MutableRefObject<number[]> = { current: [] };\n  clickedBallsRef: MutableRefObject<Set<number>> = {\n    current: new Set<number>()\n  };\n  trialTimeSinceClick: MutableRefObject<number> = { current: 0 };\n  currentTrialClickTimes: MutableRefObject<number[]> = { current: [] };\n  currentSpeedRef: MutableRefObject<number> = { current: 0.01 };\n  lastTimestampRef: MutableRefObject<number> = { current: 0 };\n\n  constructor(props: GameProps) {\n    super(props);\n    this.data = {\n      scores: [] as number[],\n      reactionTimes: []\n    };\n  }\n\n  createBalls() {\n    this.ballsRef.current = createBalls(\n      this.canvasRef.current!,\n      this.ballSizeRef.current!,\n      this.paramsRef.current!.numOfBalls,\n      Ball\n    ) as BallType[];\n  }\n\n  setup() {\n    this.ballSizeRef.current = Math.max(Math.round(window.innerWidth / 27), 40);\n    this.createBalls();\n\n    const uniqueIndices = new Set<number>();\n    while (uniqueIndices.size < 4) {\n      uniqueIndices.add(\n        Math.floor(Math.random() * this.ballsRef.current!.length)\n      );\n    }\n    this.highlightedBallsRef.current = Array.from(uniqueIndices);\n    this.actualBallsRef.current = this.highlightedBallsRef.current;\n  }\n\n  update = (deltaTime: number) => {\n    resolveCollisionsWithWalls(\n      this.ballsRef.current,\n      this.currentSpeedRef.current,\n      this.canvasRef.current!.width,\n      this.canvasRef.current!.height,\n      deltaTime\n    );\n\n    resolveCollisions(\n      this.ballsRef.current,\n      this.currentSpeedRef.current,\n      deltaTime\n    );\n\n    this.ballsRef.current.forEach((ball, index) => {\n      ball.drawBall(\n        ball,\n        this.highlightedBallsRef.current!.includes(index),\n        this.ctxRef.current!,\n        this.wrongBallsRef.current &&\n          this.wrongBallsRef.current!.includes(index),\n        this.correctBallsRef.current &&\n          this.correctBallsRef.current!.includes(index)\n      );\n    });\n  };\n\n  resetGame() {\n    super.resetGame();\n    this.currentSpeedRef.current = 0.01;\n    this.ballsRef.current.forEach((ball) => ball.reset());\n  }\n\n  resetSelection = () => {\n    this.clickedBallsRef.current.clear();\n    this.highlightedBallsRef.current = [];\n    this.update(0);\n  };\n\n  animate = (timestamp: number) => {\n    if (!this.canvasRef.current) return;\n    if (!this.lastTimestampRef.current)\n      this.lastTimestampRef.current = timestamp;\n\n    const deltaTime = Math.max(\n      Math.min((timestamp - this.lastTimestampRef.current) / 1000, 1),\n      1e-6\n    );\n\n    this.lastTimestampRef.current = timestamp;\n\n    this.drawBackground();\n\n    this.update(deltaTime);\n    if (this.state.isRunning) {\n      requestAnimationFrame(this.animate);\n    }\n  };\n\n  renderGame() {\n    this.setup();\n    this.startAnimationLoop();\n\n    setTimeout(() => {\n      this.currentSpeedRef.current = this.paramsRef.current!.startingVts;\n      this.highlightedBallsRef.current = [];\n      this.currentTrialClickTimes.current = [];\n    }, 1000);\n  }\n\n  calculateScore = (\n    selected: number[],\n    actual: number[]\n  ): { score: number; wrongBalls: number[]; correctBalls: number[] } => {\n    let score = 0;\n    const wrongBalls: number[] = [];\n    const correctBalls: number[] = [];\n    selected.forEach((selectedBall) => {\n      if (actual.includes(selectedBall)) {\n        score++;\n        correctBalls.push(selectedBall);\n      } else {\n        wrongBalls.push(selectedBall);\n      }\n    });\n    return { score: score, wrongBalls: wrongBalls, correctBalls: correctBalls };\n  };\n\n  addEventListenersAfterGame = () => {\n    this.trialTimeSinceClick.current = performance.now();\n    this.eventHandler!.add(\"click\", this.handleMouseClickAfterGame);\n  };\n\n  handleMouseClickAfterGame = (event: MouseEvent) => {\n    if (this.clickedBallsRef.current!.size >= 4) {\n      return;\n    }\n    const currentClickTime = performance.now();\n\n    const rect = this.canvasRef.current!.getBoundingClientRect();\n    const mouseX = event.clientX - rect.left;\n    const mouseY = event.clientY - rect.top;\n\n    this.ballsRef.current!.forEach((ball, index) => {\n      const dx = mouseX - ball.x;\n      const dy = mouseY - ball.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n\n      if (distance < ball.radius) {\n        if (this.clickedBallsRef.current.has(index)) {\n          this.clickedBallsRef.current.delete(index);\n          this.highlightedBallsRef.current! =\n            this.highlightedBallsRef.current!.filter((el) => el !== index);\n          return;\n        }\n        this.clickedBallsRef.current!.add(index);\n        this.highlightedBallsRef.current!.push(index);\n\n        const reactionTime =\n          currentClickTime - this.trialTimeSinceClick.current;\n        this.trialTimeSinceClick.current = currentClickTime;\n        this.currentTrialClickTimes.current.push(reactionTime);\n\n        if (this.clickedBallsRef.current!.size === 4) {\n          // Remove the event listener immediately to avoid extra clicks\n          window.removeEventListener(\"click\", this.handleMouseClickAfterGame);\n\n          // Calculate the score\n          const { score, wrongBalls, correctBalls } = this.calculateScore(\n            Array.from(this.clickedBallsRef.current!),\n            this.actualBallsRef.current!\n          );\n\n          this.wrongBallsRef.current = wrongBalls;\n          this.correctBallsRef.current = correctBalls;\n\n          this.data.scores = [...this.data.scores, score];\n\n          this.data.reactionTimes.push({\n            clickTimes: [...this.currentTrialClickTimes.current]\n          });\n\n          if (score === 4) {\n            this.setState({\n              vts: this.state.vts + this.paramsRef.current!.changeInVts\n            } as TNTGameState);\n          } else if (this.state.vts > 50) {\n            this.setState({\n              vts: this.state.vts - this.paramsRef.current!.changeInVts\n            } as TNTGameState);\n          }\n\n          // Add a delay before clearing and resetting\n          setTimeout(() => {\n            this.clickedBallsRef.current!.clear();\n            this.wrongBallsRef.current = [];\n            this.correctBallsRef.current = [];\n\n            if (\n              this.state.isPractice &&\n              this.state.trial + 1 > this.paramsRef.current!.practiceTrials\n            ) {\n              this.setState({\n                vts: this.paramsRef.current!.startingVts\n              } as TNTGameState);\n            }\n            this.setState({ trial: this.state.trial + 1 });\n\n            // Force a canvas update to reflect the cleared state\n            this.update(0);\n          }, 1000); // Delay of 1 second\n        }\n      }\n    });\n\n    setTimeout(() => {\n      this.update(0);\n    }, 10);\n  };\n}\n\nexport default TNT;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2439, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2445, "column": 0}, "map": {"version":3,"sources":["file:///Users/devpatel/Documents/NeuroScout/frontend/src/components/game-components/games/TNTGlow.tsx"],"sourcesContent":["\"use client\";\n\nimport { MutableRefObject } from \"react\";\nimport { GameProps } from \"../Game\";\nimport { createBalls, GlowBall } from \"../utils\";\nimport TNT, { BaseTNTGameData, BaseTNTParams } from \"./TNT\";\n\ntype TNTGlowGameData = BaseTNTGameData & {\n  reactionTimesGlow: number[][];\n};\n\ntype TNTGlowParams = BaseTNTParams & {\n  randomnessMean: number;\n  randomnessStd: number;\n};\n\nclass TNTGlowGame extends TNT<TNTGlowParams, TNTGlowGameData, GlowBall> {\n  reactionTimesGlowRef: MutableRefObject<number[]> = { current: [] };\n  shouldGlowRef: MutableRefObject<boolean> = { current: true };\n\n  constructor(props: GameProps) {\n    super(props);\n    this.data.reactionTimesGlow = [];\n  }\n\n  randomGaussian(mean: number, stddev: number) {\n    const u = 1 - Math.random();\n    const v = Math.random();\n    const z = Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v);\n    return z * stddev + mean;\n  }\n\n  selectRandomBallToGlow = () => {\n    setTimeout(\n      () => {\n        const availableBalls = this.ballsRef.current!.filter(\n          (_, index) => !this.actualBallsRef.current.includes(index)\n        );\n        if (availableBalls.length > 0 && this.shouldGlowRef.current) {\n          const randomBall =\n            availableBalls[Math.floor(Math.random() * availableBalls.length)];\n          randomBall.glow();\n        }\n      },\n      this.randomGaussian(\n        this.paramsRef.current!.randomnessMean,\n        this.paramsRef.current!.randomnessStd\n      )\n    );\n  };\n\n  addEventListenersDuringGame = () => {\n    this.eventHandler!.add(\"click\", this.handleMouseClickDuringGame);\n  };\n\n  handleMouseClickDuringGame = (event: MouseEvent) => {\n    const rect = this.canvasRef.current!.getBoundingClientRect();\n    const mouseX = event.clientX - rect.left;\n    const mouseY = event.clientY - rect.top;\n    const glowDistance = 20;\n    this.ballsRef.current.forEach((ball) => {\n      const dx = mouseX - ball.x;\n      const dy = mouseY - ball.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      if (distance < ball.radius + glowDistance) {\n        if (ball.isGlowed) {\n          ball.click(this.selectRandomBallToGlow);\n        }\n      }\n    });\n  };\n\n  resetGame() {\n    if (this.reactionTimesGlowRef.current.length > 0) {\n      this.data.reactionTimesGlow = [\n        ...this.data.reactionTimesGlow,\n        this.reactionTimesGlowRef.current\n      ];\n    }\n    this.reactionTimesGlowRef.current = [];\n\n    super.resetGame();\n  }\n\n  createBalls() {\n    this.reactionTimesGlowRef.current = [];\n    this.ballsRef.current = createBalls(\n      this.canvasRef.current!,\n      this.ballSizeRef.current!,\n      this.paramsRef.current!.numOfBalls,\n      GlowBall,\n      this.reactionTimesGlowRef\n    );\n\n    setTimeout(() => {\n      this.selectRandomBallToGlow();\n      this.shouldGlowRef.current = true;\n      setTimeout(\n        () => {\n          this.shouldGlowRef.current = false;\n        },\n        this.paramsRef.current!.duration * 1000 - 3000\n      );\n    }, 3000);\n  }\n}\n\nexport default TNTGlowGame;\n"],"names":[],"mappings":";;;AAIA;AACA;AADA;AAAA;AAJA;;;AAgBA,MAAM,oBAAoB,2JAAA,CAAA,UAAG;IAC3B,uBAAmD;QAAE,SAAS,EAAE;IAAC,EAAE;IACnE,gBAA2C;QAAE,SAAS;IAAK,EAAE;IAE7D,YAAY,KAAgB,CAAE;QAC5B,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,CAAC,iBAAiB,GAAG,EAAE;IAClC;IAEA,eAAe,IAAY,EAAE,MAAc,EAAE;QAC3C,MAAM,IAAI,IAAI,KAAK,MAAM;QACzB,MAAM,IAAI,KAAK,MAAM;QACrB,MAAM,IAAI,KAAK,IAAI,CAAC,CAAC,MAAM,KAAK,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,MAAM,KAAK,EAAE,GAAG;QACnE,OAAO,IAAI,SAAS;IACtB;IAEA,yBAAyB;QACvB,WACE;YACE,MAAM,iBAAiB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAE,MAAM,CAClD,CAAC,GAAG,QAAU,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC;YAEtD,IAAI,eAAe,MAAM,GAAG,KAAK,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;gBAC3D,MAAM,aACJ,cAAc,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,eAAe,MAAM,EAAE;gBACnE,WAAW,IAAI;YACjB;QACF,GACA,IAAI,CAAC,cAAc,CACjB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAE,cAAc,EACtC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAE,aAAa;IAG3C,EAAE;IAEF,8BAA8B;QAC5B,IAAI,CAAC,YAAY,CAAE,GAAG,CAAC,SAAS,IAAI,CAAC,0BAA0B;IACjE,EAAE;IAEF,6BAA6B,CAAC;QAC5B,MAAM,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAE,qBAAqB;QAC1D,MAAM,SAAS,MAAM,OAAO,GAAG,KAAK,IAAI;QACxC,MAAM,SAAS,MAAM,OAAO,GAAG,KAAK,GAAG;QACvC,MAAM,eAAe;QACrB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAC7B,MAAM,KAAK,SAAS,KAAK,CAAC;YAC1B,MAAM,KAAK,SAAS,KAAK,CAAC;YAC1B,MAAM,WAAW,KAAK,IAAI,CAAC,KAAK,KAAK,KAAK;YAC1C,IAAI,WAAW,KAAK,MAAM,GAAG,cAAc;gBACzC,IAAI,KAAK,QAAQ,EAAE;oBACjB,KAAK,KAAK,CAAC,IAAI,CAAC,sBAAsB;gBACxC;YACF;QACF;IACF,EAAE;IAEF,YAAY;QACV,IAAI,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,MAAM,GAAG,GAAG;YAChD,IAAI,CAAC,IAAI,CAAC,iBAAiB,GAAG;mBACzB,IAAI,CAAC,IAAI,CAAC,iBAAiB;gBAC9B,IAAI,CAAC,oBAAoB,CAAC,OAAO;aAClC;QACH;QACA,IAAI,CAAC,oBAAoB,CAAC,OAAO,GAAG,EAAE;QAEtC,KAAK,CAAC;IACR;IAEA,cAAc;QACZ,IAAI,CAAC,oBAAoB,CAAC,OAAO,GAAG,EAAE;QACtC,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,CAAA,GAAA,kKAAA,CAAA,cAAW,AAAD,EAChC,IAAI,CAAC,SAAS,CAAC,OAAO,EACtB,IAAI,CAAC,WAAW,CAAC,OAAO,EACxB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAE,UAAU,EAClC,0KAAA,CAAA,WAAQ,EACR,IAAI,CAAC,oBAAoB;QAG3B,WAAW;YACT,IAAI,CAAC,sBAAsB;YAC3B,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG;YAC7B,WACE;gBACE,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG;YAC/B,GACA,IAAI,CAAC,SAAS,CAAC,OAAO,CAAE,QAAQ,GAAG,OAAO;QAE9C,GAAG;IACL;AACF;uCAEe"}},
    {"offset": {"line": 2526, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}